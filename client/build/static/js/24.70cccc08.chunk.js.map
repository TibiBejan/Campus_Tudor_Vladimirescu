{"version":3,"sources":["components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/StudentDashboard/StudentDashboardMain/StudentDashboardMain.js","components/StudentDashboard/StudentDashboardAccommodate/StudentDashboardAccommodate.js","pages/StudentDashboard.js"],"names":["StudentDashboardNav","userState","useSelector","userSelector","className","to","user","first_name","last_name","activeClassName","StudentDashboardMain","SwiperCore","use","Navigation","EffectFade","trackWindowScroll","scrollPosition","accommodationSelector","accommodation","student","roomNeighbors","neighbors","filter","neighbor","email","useState","setSlidesLength","setActiveIndex","prevButton","nextButton","disabled","setDisabled","sliderPrevButton","useRef","sliderNextButton","hallImage","require","hallId","default","Enrollment","university","split","slice","join","HallRoom","room_number","room_floor","Hall","hall_name","alt","src","effect","height","width","students_number","rooms_number","student_per_room","min_grade","slidesPerView","navigation","prevEl","current","nextEl","breakpoints","1366","1250","768","767","grabCursor","resistance","resistanceRatio","spaceBetween","speed","onInit","length","onSlideChange","Swiper","activeIndex","EmptyNeighbordCard","message","map","NeighborCard","cardData","ref","Provider","value","color","size","bannerData","isLink","subtitle","StudentDashboard","accommodationState","userEnrollState","userEnrollSelector","dispatch","useDispatch","isLoading","setIsLoading","setIsAccommodated","useEffect","requestAccommodation","axios","get","uuid","headers","withCredentials","credentials","then","response","accommodatedUser","data","receiveAccommodation","catch","err","accommodationError","InitialTransition","Header","AuthBanner","sectionData","isAccommodated","StatsSection","Footer"],"mappings":"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","file":"static/js/24.70cccc08.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React from 'react';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport { Link } from 'react-router-dom';\r\n// REUDX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\nimport './StudentDashboardMain.scss';\r\n\r\nfunction StudentDashboardMain() {\r\n\r\n    // GLOBAL STATE SLICE\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <section className=\"dashboard-main\">\r\n            <div className=\"dashboard-main-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-information\">\r\n                    <h3 className=\"information-title heading-three\">Bine ai venit, {`${userState.user.last_name} ${userState.user.first_name}`}</h3>\r\n                    <p className=\"information-description paragraph\">Pe această pagină se vor regăsi informațiile dumneavoastră privind căminul și camera în care ați fost repartizat din campusul nostru, precum și viitorii colegi de cameră. De asemenea, utilizând link-urile de mai sus puteți să vă actualizați informațiile generale , puteți să adaugați persoane de contact sau puteți să vă actualizați parola. În cazul în care nu sunteți înrolat, dar doriți să fiți repartizat în campusul Tudor Vladimirescu, vă rugam să urmați pașii de mai jos.</p>\r\n                    <ol className=\"information-accommodation-steps\">\r\n                        <li className=\"accommodation-step\">\r\n                            <p className=\"accommodation-step-label paragraph\">\r\n                                Primul pas din cadrul procesului de cazare consta in actualizarea informatiilor dumneavoastră generale. Acestea pot fi completate accesand link-ul urmator:\r\n                                <Link to={`/${userState.user.first_name}.${userState.user.last_name}/information`} className=\"step-link\">\r\n                                    <span className=\"step-link-label label\">Datele studentului</span>\r\n                                </Link>\r\n                            </p>\r\n                        </li>\r\n                        <li className=\"accommodation-step\">\r\n                            <p className=\"accommodation-step-label paragraph\">\r\n                                Al doilea pas din cadrul procesului de cazare consta in actualizarea persoanei/persoanelor de contact. Acestea pot fi adaugate accesand link-ul urmator:\r\n                                <Link to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} className=\"step-link\">\r\n                                    <span className=\"step-link-label label\">Persoane de contact</span>\r\n                                </Link>\r\n                            </p>\r\n                        </li>\r\n                        <li className=\"accommodation-step\">\r\n                            <p className=\"accommodation-step-label paragraph\">\r\n                                Ultimul pas din cadrul procesului de cazare consta in inrolarea propriu-zisa. Aceasta poate fi completata accesand link-ul urmator:\r\n                                <Link to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} className=\"step-link\">\r\n                                    <span className=\"step-link-label label\">Inrolare</span>\r\n                                </Link>\r\n                            </p>\r\n                        </li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardMain;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { accommodationSelector } from '../../../redux/accommodationSlice';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsArrowLeft, BsArrowRight } from \"react-icons/bs\";\r\n\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport NeighborCard from '../../SharedComponents/NeighborCard/NeighborCard';\r\nimport EmptyNeighbordCard from '../../SharedComponents/EmptyNeighborCard/EmptyNeighbordCard';\r\nimport { LazyLoadImage, trackWindowScroll  } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport './StudentDashboardAccommodate.scss';\r\n\r\n// SWIPER SLIDER\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, EffectFade  } from 'swiper';\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport 'swiper/components/effect-fade/effect-fade.scss';\r\n// INSTAL MODULES\r\nSwiperCore.use([Navigation, EffectFade]);\r\n\r\nfunction StudentDashboardAccommodate({scrollPosition}) {\r\n\r\n    // SLICE OF STATE\r\n    const accommodationState = useSelector(accommodationSelector);\r\n    const { student, neighbors } = accommodationState.accommodation;\r\n    const roomNeighbors = neighbors.filter(neighbor => neighbor.email !== student.email);\r\n\r\n     // STATE\r\n     const [ slidesLength, setSlidesLength ] = useState(null);\r\n     const [ activeIndex, setActiveIndex ] = useState(1);\r\n     const [ disabled, setDisabled ] = useState({\r\n         prevButton: false,\r\n         nextButton: false\r\n     });\r\n \r\n     // REF\r\n     const sliderPrevButton = useRef(null);\r\n     const sliderNextButton = useRef(null);\r\n\r\n    const hallImage = require(`../../../assets/images/ResidenceHalls/campus-${student.hallId}.jpg`).default;\r\n\r\n    return (\r\n        <section className=\"dashboard-accommodate\">\r\n            <div className=\"dashboard-accommodate-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-accommodate-cards\">\r\n                    <div className=\"showcase-card\">\r\n                        <h3 className=\"showcase-card-title heading-three\">Bine ai venit, {`${student.last_name} ${student.first_name}`}</h3>\r\n                        <p className=\"showcase-card-description paragraph\">\r\n                            Pe baza informatiilor furnizate in cele 3 formulare de inscriere, ai fost repartizat cu success in campusul Tudor Vladimirescu, in calitate de student al universitatii <span className=\"secondary-label\">{student.Enrollment.university.split(' ').slice(1).join(' ')}</span>. Ai fost cazat in caminul <span className=\"secondary-label\">T{student.hallId}</span>, in camera cu numarul <span className=\"secondary-label\">{student.HallRoom.room_number}</span> situata la <span className=\"secondary-label\">{student.HallRoom.room_floor === 0 ? \"parter\" : `etajul ${student.HallRoom.room_floor}`}</span>.\r\n                        </p>\r\n                        <p className=\"showcase-card-description paragraph\">\r\n                            De asemenea, pe aceasta pagina poti vizualiza caminul in care ai fost repartizat, administratorul precum si presenditele caminului, dar si viitorii colegi de camera.\r\n                        </p>\r\n                    </div>\r\n                    <Link to={`/residence-halls/${student.Hall.hall_name}`} className=\"hall-card-wrapper\">\r\n                        <div className=\"hall-card\">\r\n                            <div className=\"hall-card-background\">\r\n                                {/* <img src={ hallImage } alt={`Camin T${student.hallId}`} className=\"background-image\" /> */}\r\n                                <LazyLoadImage\r\n                                    alt={`Camin T${student.hallId}`}\r\n                                    src={ hallImage }\r\n                                    effect=\"blur\"\r\n                                    scrollPosition={scrollPosition}\r\n                                    className=\"background-image\"\r\n                                    // visibleByDefault={\"true\"}\r\n                                    height={\"100%\"}\r\n                                    width={\"100%\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"hall-card-content\">\r\n                                <h4 className=\"hall-card-title heading-four\">Camin T{student.hallId}</h4>\r\n                                <div className=\"hall-card-content-hovered\">\r\n                                    <span className=\"label\">Studenti: {student.Hall.students_number}</span>\r\n                                    <span className=\"label\">Numar de camere: {student.Hall.rooms_number}</span>\r\n                                    <span className=\"label\">Studenti in camera: {student.Hall.student_per_room}</span>\r\n                                    <span className=\"label\">Media necesara: {student.Hall.min_grade}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <h3 className=\"showcase-card-title heading-three\">Viitori colegi</h3>\r\n                <Swiper \r\n                    slidesPerView={1}\r\n                    navigation={{\r\n                        prevEl: sliderPrevButton.current,\r\n                        nextEl: sliderNextButton.current,\r\n                    }}\r\n                    breakpoints={{\r\n                        1366: {slidesPerView: 2.5},\r\n                        1250: {slidesPerView: 2},\r\n                        768: {slidesPerView: 1.5},\r\n                        767: {slidesPerView: 1}\r\n                    }}\r\n                    grabCursor={true}\r\n                    resistance={true}\r\n                    resistanceRatio={0.5}\r\n                    spaceBetween={50}\r\n                    speed={1000}\r\n                    onInit={() => {\r\n                        setSlidesLength(roomNeighbors.length);\r\n                        setActiveIndex(1);\r\n                    }}\r\n                    onSlideChange={(Swiper) => {\r\n                        setActiveIndex(Swiper.activeIndex + 1);\r\n                        if(Swiper.activeIndex === 0) {\r\n                            setDisabled({\r\n                                prevButton: true,\r\n                                nextButton: false\r\n                            });\r\n                        } else if(Swiper.activeIndex >= roomNeighbors.length -1) {\r\n                            setDisabled({\r\n                                prevButton: false,\r\n                                nextButton: true\r\n                            });\r\n                        } else {\r\n                            setDisabled({\r\n                                prevButton: false,\r\n                                nextButton: false\r\n                            });\r\n                        }\r\n                    }}\r\n                    className=\"dashboard-accommodate-slider\"\r\n                >\r\n                    {roomNeighbors.length === 0 && (\r\n                        <SwiperSlide>\r\n                            <EmptyNeighbordCard message=\"In acest moment, sunteti singurul student cazat in aceasta camera\" />\r\n                        </SwiperSlide>\r\n                    )}\r\n                    {roomNeighbors.map(neighbor => (\r\n                        <SwiperSlide key={`person-card-${neighbor.email}`}>\r\n                            <NeighborCard cardData={neighbor} />\r\n                        </SwiperSlide>\r\n                    ))}\r\n\r\n\r\n                    <button disabled={disabled.prevButton} className=\"showcase-prev-button\" ref={sliderPrevButton}>\r\n                        <IconContext.Provider value={{color: '#fafafa', size: '34px'}}>\r\n                            <BsArrowLeft />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                    <button disabled={disabled.nextButton} className=\"showcase-next-button\" ref={sliderNextButton}>\r\n                        <IconContext.Provider value={{color: '#fafafa', size: '34px'}}>\r\n                            <BsArrowRight />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                </Swiper>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default trackWindowScroll(StudentDashboardAccommodate);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestAccommodation, receiveAccommodation, accommodationError, accommodationSelector } from '../redux/accommodationSlice';\r\nimport { userSelector } from '../redux/userSlice';\r\nimport { userEnrollSelector } from '../redux/userEnrollSlice';\r\nimport axios from 'axios';\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardMain from '../components/StudentDashboard/StudentDashboardMain/StudentDashboardMain';\r\nimport StudentDashboardAccommodate from '../components/StudentDashboard/StudentDashboardAccommodate/StudentDashboardAccommodate';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Informatii general si repartizare\"\r\n}\r\n\r\nfunction StudentDashboard() {\r\n\r\n    // SLICE OF STATE\r\n    const accommodationState = useSelector(accommodationSelector);\r\n    const userState = useSelector(userSelector);\r\n    const userEnrollState = useSelector(userEnrollSelector);\r\n    const dispatch = useDispatch();\r\n    // STATE\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ isAccommodated, setIsAccommodated ] = useState({});\r\n\r\n    // GET CURRENT ENROLLMENT ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchAccommodation = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n\r\n            dispatch(requestAccommodation());\r\n\r\n            ///api/v1/accommodation/${userState.user.uuid}\r\n\r\n            axios.get(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/accommodation/${userState.user.uuid}`, reqConfig).then((response) => {\r\n                const { accommodatedUser } = response.data;\r\n                dispatch(receiveAccommodation(accommodatedUser));\r\n                setIsAccommodated(accommodatedUser);\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                dispatch(accommodationError('There is an error with your informations, please try again later'));\r\n                setIsLoading(false);\r\n                setIsAccommodated({});\r\n            });\r\n        }\r\n\r\n        fetchAccommodation();\r\n\r\n        return () => {\r\n            setIsAccommodated({});\r\n        }\r\n    }, [dispatch, userState.user.uuid, userEnrollState]);\r\n\r\n    if(isLoading) {\r\n        return <InitialTransition />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                {\r\n                    accommodationState.isAccommodated ?\r\n                        <StudentDashboardAccommodate /> \r\n                        : <StudentDashboardMain />\r\n                }\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboard\r\n"],"sourceRoot":""}