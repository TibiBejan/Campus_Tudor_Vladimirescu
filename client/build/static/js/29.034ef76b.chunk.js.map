{"version":3,"sources":["components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/StudentDashboard/StudentDashboardUpdateKin/StudentDashboardUpdateKin.js","pages/StudentDashboardKinUpdate.js"],"names":["StudentDashboardNav","userState","useSelector","userSelector","className","to","user","first_name","last_name","activeClassName","StudentDashboardUpdateKin","useState","currentKin","setCurrentKin","isLoading","setIsLoading","formError","setFormError","blockRef","useRef","id","useParams","history","useHistory","useEffect","axios","get","headers","withCredentials","credentials","then","response","kin","data","catch","err","message","errors","msg","push","formik","useFormik","initialValues","email","relation","adress","phone_number","validateOnBlur","enableReinitialize","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","patch","status","validationSchema","createKinSchema","ref","GeneralErrorMessage","method","handleSubmit","htmlFor","type","name","value","onChange","handleChange","ErrorMessage","ButtonPrimary","textLabel","onClick","delete","location","reload","reqMessage","bannerData","isLink","subtitle","StudentDashboardKinUpdate","InitialTransition","Header","AuthBanner","sectionData","StatsSection","Footer"],"mappings":"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","file":"static/js/29.034ef76b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\nimport IntialTransition from '../../../utils/InitialTransition/InitialTransition';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createKinSchema } from '../../../validation/UserSchema';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardUpdateKin.scss'\r\n\r\nfunction StudentDashboardUpdateKin() {\r\n\r\n    // STATE\r\n    const [ currentKin, setCurrentKin ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ formError, setFormError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n    const userState = useSelector(userSelector);\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    // GET CURRENT KIN ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchCurrentkin = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n    \r\n            axios.get(`/api/v1/users/kins/${id}`, reqConfig).then((response) => {\r\n                const { kin } = response.data;\r\n                setCurrentKin(kin);\r\n                setIsLoading(false);\r\n                setFormError('');\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n                setFormError(message);\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/kins`);\r\n            });\r\n        }\r\n        fetchCurrentkin();\r\n    }, [history, id, userState]);\r\n\r\n    // SUBMIT UPDATED KIN\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        axios.patch(`/api/v1/users/kins/${id}`,  values, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                resetForm();\r\n                setFormError('');\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/kins`);\r\n            } else {\r\n                setFormError('There is an error, please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // HANDLE DELETE KIN\r\n    const handleDeleteKin = () => {\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        axios.delete(`/api/v1/users/kins/${id}`, reqConfig).then((response) => {\r\n            if(response.status === 204) {\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/kins`);\r\n                window.location.reload();\r\n            } else {\r\n                setFormError('There is an error, your kin relation can not be deleted. Please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors[0].msg;\r\n            const reqMessage = err.response.message;\r\n            setFormError(reqMessage ? reqMessage : message);\r\n        });\r\n    }\r\n     \r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: currentKin ? currentKin.first_name : '',\r\n            last_name: currentKin ? currentKin.last_name : '',\r\n            email: currentKin ? currentKin.email : '',\r\n            relation: currentKin ? currentKin.relation : '',\r\n            adress: currentKin ? currentKin.adress : '',\r\n            phone_number: currentKin ? currentKin.phone_number : '',\r\n        },\r\n        validateOnBlur: true,\r\n        enableReinitialize: true,\r\n        onSubmit,\r\n        validationSchema: createKinSchema\r\n    });\r\n\r\n    if(isLoading) {\r\n        return <IntialTransition />\r\n    }\r\n\r\n    return (\r\n        <section className=\"dashboard-kin-update\">\r\n            <div className=\"dashboard-kin-update-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Actualizeaza persoana de contact: {currentKin && `${currentKin.first_name} ${currentKin.last_name}`}</h3>\r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-kin-update-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\" className=\"form-group-label label\">Prenumele persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"firstName\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"first_name\"\r\n                                    value={formik.values.first_name}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            {formik.errors.first_name && <ErrorMessageEl>{formik.errors.first_name}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\" className=\"form-group-label label\">Numele persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"lastName\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"last_name\"\r\n                                    value={formik.values.last_name}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.last_name && <ErrorMessageEl>{formik.errors.last_name}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\" className=\"form-group-label label\">Email-ul persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id=\"email\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"email\"\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.email && <ErrorMessageEl>{formik.errors.email}</ErrorMessageEl>}       \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"relation\" className=\"form-group-label label\">Tipul relatiei.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"relation\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"relation\"\r\n                                    value={formik.values.relation}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.relation && <ErrorMessageEl>{formik.errors.relation}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Actualizeaza pesoana de contact\" />\r\n                        <ButtonPrimary type=\"button\" onClick={handleDeleteKin} textLabel=\"Sterge pesoana de contact\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardUpdateKin;\r\n","import React from 'react'\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardUpdateKin from '../components/StudentDashboard/StudentDashboardUpdateKin/StudentDashboardUpdateKin';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Actualizarea persoanei de contact\"\r\n}\r\n\r\nfunction StudentDashboardKinUpdate() {\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                <StudentDashboardUpdateKin />\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardKinUpdate\r\n"],"sourceRoot":""}