{"version":3,"sources":["components/SharedComponents/AuthBanner/AuthBanner.js","components/SharedComponents/GeneralErrorMessage/GeneralErrorMessage.js","components/AdminDashboard/AdminDashboardNav/AdminDashboardNav.js","validation/AdminSchema.js","components/AdminDashboard/AdminDashboardSearch/AdminDashboardSearch.js","assets/images/delete-illustration.svg","components/SharedComponents/DeleteModal/DeleteModal.js","components/AdminDashboard/AdminDashboardPagination/AdminDashboardPagination.js","components/AdminDashboard/AdminDashboardMain/AdminDashboardMain.js","pages/AdminDashboard.js","components/SharedComponents/Button/ButtonPrimary.js","components/SharedComponents/FormErrorMessage/ErrorMessage.js"],"names":["AuthBanner","sectionData","title","className","subtitle","isLink","to","path","pathLabel","GeneralErrorMessage","children","success","AdminDashboardNav","activeClassName","adminSearchSchema","yup","university","searchQuerry","matches","updateStudentSchema","first_name","required","min","last_name","email","role","createStudentSchema","password","password_confirm","when","is","val","length","then","oneOf","AdminDashboardSearch","dispatch","useDispatch","useState","formError","setFormError","blockRef","useRef","useEffect","requestStudents","axios","get","headers","withCredentials","credentials","response","students","data","receiveStudents","catch","err","message","studentsError","onSubmit","values","a","window","scrollTo","current","offsetTop","reqConfig","reqUrl","rows","formik","useFormik","initialValues","validateOnBlur","enableReinitialize","validationSchema","ref","method","handleSubmit","htmlFor","type","id","name","value","onChange","handleChange","errors","ErrorMessage","label","textLabel","DeleteModal","handleDelete","toggleModal","toggled","document","body","style","overflow","overflowY","src","deleteIllustation","alt","onClick","AdminDashboardPagination","studentsData","history","useHistory","pageNumber","setPageNumber","modalOpen","setModalOpen","studentId","setStudentId","error","setError","tuiasiLogo","require","default","executeScroll","pagesVisited","pageCount","Math","ceil","displayUsers","slice","map","student","index","status","Enrollment","undefined","hallId","requestSelectedUser","user","receiveSelectedUser","push","uuid","selectedUserError","dispatchSelectedStudent","Provider","size","color","requestDeleteStudents","delete","receiveDeleteStudents","studentsDeleteError","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","AdminDashboardMain","adminState","useSelector","adminSelector","Object","keys","bannerData","AdminDashboard","InitialTransition","Header","StatsSection","Footer","Button","disabled","ErrorMessageWrapper","styled","div","MessageLabel","p","ErrorMessageEl"],"mappings":"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","file":"static/js/20.e13efea2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './AuthBanner.scss';\r\n\r\nfunction AuthBanner({ sectionData, title }) {\r\n    return (\r\n        <section className=\"auth-banner\">\r\n            <div className=\"auth-banner-content\">\r\n                <div className=\"content-heading-wrapper\">\r\n                    <h1 className=\"content-heading-title heading-one\">{title ? title : 'Portalul utilizatorului'}</h1>\r\n                </div>\r\n                <div className=\"content-subtitle-wrapper\">\r\n                    <h3 className=\"content-subtitle heading-three\">{sectionData.subtitle}</h3>\r\n                    {sectionData.isLink && \r\n                        <Link to={sectionData.path} className=\"content-link-wrapper\">\r\n                            <span className=\"content-link-label label-large\">{sectionData.pathLabel}</span>\r\n                        </Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AuthBanner;","import React from 'react';\r\nimport './GeneralErrorMessage.scss';\r\n\r\nfunction GeneralErrorMessage({ children, success }) {\r\n    return (\r\n        <div className=\"general-error\">\r\n            <div className=\"general-error-inner\">\r\n                <span className=\"link-label\">{success ? 'Success:' : 'Error:'}<span className=\"label\">{children}</span></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralErrorMessage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './AdminDashboardNav.scss';\r\n\r\nfunction AdminDashboardNav() {\r\n\r\n    return (\r\n        <ul className=\"dashboard-admin-nav\">\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin-blog' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Blog</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin-appoitments' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Appoitments</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin-create' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Create student</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin-details' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-admin-nav-list-item\">\r\n                <NavLink \r\n                    to='/admin-password' \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardNav;\r\n","// FORM LIBRARY\r\nimport * as yup from 'yup';\r\n\r\n// PWD REGET EXPRESSION\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n// STUDENT ENROLLMENT SCHEMA\r\nexport const adminSearchSchema = yup.object({\r\n    university: yup.string(),\r\n    searchQuerry: yup.string().matches(/^[ A-Za-z0-9_@./-]*$/g, \"Your querry must contain only alphanumeric chars and the following: _@./-\"),\r\n});\r\n\r\nexport const updateStudentSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter the first name\").min(3, \"First name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter the last name\").min(3, \"Last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter the e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n    role: yup.string().required(\"You must enter the desired role\")\r\n});\r\n\r\nexport const createStudentSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter the first name\").min(3, \"First name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter the last name\").min(3, \"Last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter the e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n    password: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_confirm: yup.string().required(\"You must enter a password confirm\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password\")], \"Your confirm password does not match, please try again\")\r\n    }),\r\n    role: yup.string().required(\"You must enter the desired role\")\r\n});\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport Button from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { adminSearchSchema } from '../../../validation/AdminSchema';\r\n\r\n// REUDX\r\nimport { useDispatch } from 'react-redux';\r\nimport { requestStudents, receiveStudents, studentsError } from '../../../redux/adminSlice';\r\n\r\nimport './AdminDashboardSearch.scss';\r\n\r\nfunction AdminDashboardSearch() {\r\n\r\n     // GLOBAL STATE SLICE\r\n    const dispatch = useDispatch();\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n    // EFFECT ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchAllStudents = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                },   \r\n            }\r\n\r\n             // INIT REQ\r\n             dispatch(requestStudents());\r\n\r\n             ///api/v1/users/\r\n\r\n             axios.get('https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/', reqConfig).then((response) => {\r\n                const { students } = response.data;\r\n                dispatch(receiveStudents(students));\r\n                setFormError('');\r\n            }).catch(err => {\r\n                const message = err.response.data.message ? err.response.data.message : \"Please type a querry or select something from the inputs below.\";\r\n                setFormError(message);\r\n                dispatch(studentsError(message));\r\n            });\r\n        }\r\n\r\n        fetchAllStudents();\r\n    }, [dispatch]);\r\n\r\n    const onSubmit = async (values) => {\r\n\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },   \r\n        }\r\n\r\n        ///api/v1/search-users?${values.university ? `university=${values.university}\r\n        //`/api/v1/search-users?university=${values.university}`\r\n        //`/api/v1/search-users?searchQuerry=${values.searchQuerry}`\r\n        ///api/v1/users/\r\n\r\n        let reqUrl = null;\r\n        if(values.university && values.searchQuerry) {\r\n            reqUrl = `https://campus-tudor-vladimirescu.herokuapp.com/api/v1/search-users?${values.university ? `university=${values.university}` : ''}&${values.searchQuerry ? `searchQuerry=${values.searchQuerry}` : ''}`;\r\n        } else if(values.university && (!values.searchQuerry || values.searchQuerry === '')) {\r\n            reqUrl = `https://campus-tudor-vladimirescu.herokuapp.com/api/v1/search-users?university=${values.university}`;\r\n        } else if (values.searchQuerry && (!values.university || values.university === '')) {\r\n            reqUrl = `https://campus-tudor-vladimirescu.herokuapp.com/api/v1/search-users?searchQuerry=${values.searchQuerry}`;\r\n        } else if((!values.university || values.university === '') && (!values.searchQuerry || values.searchQuerry === '')) {\r\n            reqUrl = 'https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/'\r\n        }\r\n\r\n        // INIT REQ\r\n        dispatch(requestStudents());\r\n\r\n        axios.get(reqUrl, reqConfig).then((response) => {\r\n            const { students } = response.data;\r\n            dispatch(receiveStudents(students));\r\n            setFormError('');\r\n            if( students.rows && students.rows.length === 0 ) {\r\n                dispatch(studentsError('Nu au fost gasiti studenti pe baza acestor criterii.'));\r\n                setFormError('Nu au fost gasiti studenti pe baza acestor criterii.');\r\n            } else if (!students.length === 0 || !students) {\r\n                dispatch(studentsError('Nu au fost gasiti studenti pe baza acestor criterii.'));\r\n                setFormError('Nu au fost gasiti studenti pe baza acestor criterii.');\r\n            }\r\n        }).catch(err => {\r\n            let message;\r\n            err.response.data.message ? message = err.response.data.message : message = \"Please type a querry or select something from the inputs below.\"\r\n            setFormError(message);\r\n            dispatch(studentsError(message));\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            university: '',\r\n            searchQuerry: '',\r\n        },\r\n        validateOnBlur: true,\r\n        enableReinitialize: true,\r\n        onSubmit,\r\n        validationSchema: adminSearchSchema\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                <div className=\"dashboard-form-block-heading-wrapper\">\r\n                    <h3 className=\"dashboard-form-title heading-three\">Cauta in baza de date.</h3>    \r\n                    {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                </div>\r\n                <form className=\"dashboard-admin-search-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                    <div className=\"form-block full-width\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"searchQuerry\" className=\"form-group-label label\">Adresa de e-email, numele sau prenumele studentului*</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"searchQuerry\" \r\n                                className=\"form-group-input\"\r\n                                name=\"searchQuerry\"\r\n                                value={formik.values.searchQuerry}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.searchQuerry && <ErrorMessageEl>{formik.errors.searchQuerry}</ErrorMessageEl>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-block full-width\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"university\" className=\"form-group-label label\">Universitatea</label>\r\n                            <select \r\n                                id=\"university\" \r\n                                className=\"form-group-input form-group-select\"\r\n                                name=\"university\"\r\n                                value={formik.values.university}\r\n                                onChange={formik.handleChange}\r\n                            >\r\n                                <option value=\"\" label=\"Selectati universitatea\" />\r\n                                <option value=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" label=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" />\r\n                                <option value=\"Facultatea de Mecanică Iaşi\" label=\"Facultatea de Mecanică Iaşi\" />\r\n                                <option value=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" label=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" />\r\n                                <option value=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" label=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" />\r\n                                <option value=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" label=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" />\r\n                                <option value=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" label=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" />\r\n                                <option value=\"Facultatea de Design Industrial și Managementul Afacerilor\" label=\"Facultatea de Design Industrial și Managementul Afacerilor\" />\r\n                                <option value=\"Facultatea de Construcţii şi Instalaţii\" label=\"Facultatea de Construcţii şi Instalaţii\" />\r\n                                <option value=\"Facultatea de Automatică și Calculatoare\" label=\"Facultatea de Automatică și Calculatoare\" />\r\n                                <option value=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" label=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" />\r\n                                <option value=\"Facultatea Construcţii de Maşini și Management Industrial\" label=\"Facultatea Construcţii de Maşini și Management Industrial\" />\r\n                            </select>\r\n                            {formik.errors.university && <ErrorMessageEl>{formik.errors.university}</ErrorMessageEl>}       \r\n                        </div>\r\n                    </div>  \r\n                    <Button type=\"submit\" textLabel=\"Cauta\" />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardSearch;\r\n","export default __webpack_public_path__ + \"static/media/delete-illustration.ecb8dbc3.svg\";","import React, { useEffect } from 'react';\r\nimport deleteIllustation from '../../../assets/images/delete-illustration.svg';\r\nimport './DeleteModal.scss';\r\n\r\nfunction DeleteModal({ handleDelete, toggleModal, toggled }) {\r\n\r\n    useEffect(() => {\r\n        toggled ? document.body.style.overflow = 'hidden' : document.body.style.overflowY = 'scroll';\r\n        return () => {\r\n            document.body.style.overflowY = 'scroll';\r\n        }\r\n    }, [toggled]);\r\n\r\n    return (\r\n        <div className={toggled ? \"modal-wrapper open\" : \"modal-wrapper\"}>\r\n            <div className=\"modal-box\">\r\n                <div className=\"modal-box-inner\">\r\n                    <h3 className=\"heading-three\">Sunteti sigur?</h3>\r\n                    <p className=\"paragraph\">Aceasta actiune nu poate fi revocata!</p>\r\n                    <div className=\"delete-illustration\">\r\n                        <img src={deleteIllustation} alt=\"\" className=\"background-image\" />\r\n                    </div>\r\n                    <div className=\"modal-actions\">\r\n                        <button type=\"button\" className=\"modal-action-button\" onClick={handleDelete}>\r\n                            <span className=\"label\">Confirmă</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"modal-action-button\" onClick={toggleModal}>\r\n                            <span className=\"label\">Intoarce-te</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\nimport DeleteModal from '../../SharedComponents/DeleteModal/DeleteModal';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { \r\n    requestDeleteStudents,\r\n    receiveDeleteStudents, \r\n    studentsDeleteError,\r\n    requestSelectedUser,\r\n    receiveSelectedUser,\r\n    selectedUserError\r\n} from '../../../redux/adminSlice';\r\nimport axios from 'axios';\r\nimport './AdminDashboardPagination.scss';\r\nfunction AdminDashboardPagination({ studentsData }) {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    // STATE\r\n    const [ pageNumber, setPageNumber ] = useState(0);\r\n    const [ modalOpen, setModalOpen ] = useState(false);\r\n    const [ studentId, setStudentId ] = useState(null);\r\n    const [ error, setError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null);\r\n\r\n    const tuiasiLogo = require(`../../../assets/images/Universities/embleme-tuiasi-rr-1-300x189.png`).default\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    // HANDLE DELETE STUDENT\r\n    const handleDelete = () => {\r\n        executeScroll()\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },   \r\n        }\r\n\r\n        ///api/v1/users/${studentId}\r\n\r\n        dispatch(requestDeleteStudents());\r\n\r\n        axios.delete(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/${studentId}`, reqConfig).then((response) => {\r\n            setModalOpen(false);\r\n            setStudentId(null);\r\n            dispatch(receiveDeleteStudents(studentId));\r\n        }).catch(err => {\r\n            setModalOpen(false);\r\n            setStudentId(null);\r\n            setError('Student can not be deleted, please try again later');\r\n            dispatch(studentsDeleteError('Student can not be deleted, please try again later'));\r\n        });\r\n    }\r\n\r\n    // HANDLE DISPATCH SELECTED STUDENT\r\n    const dispatchSelectedStudent = (id) => {\r\n        const studentId = id;\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },   \r\n        }\r\n\r\n        dispatch(requestSelectedUser());\r\n\r\n        axios.get(`/api/v1/users/${studentId}`, reqConfig).then((response) => {\r\n            const { user } = response.data;\r\n            dispatch(receiveSelectedUser(user));\r\n            history.push(`/admin/${user.uuid}`);\r\n        }).catch(err => {\r\n            setError('Student can not be selected, please try again later');\r\n            dispatch(selectedUserError('Student can not be selected, please try again later'));\r\n        });\r\n    }\r\n\r\n    const toggleModal = (id) => {\r\n        if(modalOpen === false) {\r\n            setModalOpen(true);\r\n            setStudentId(id);\r\n        } else if (modalOpen === true) {\r\n            setModalOpen(false);\r\n            setStudentId(null);\r\n        }\r\n    }\r\n\r\n    // RESET SCROLL POS ON PAGINATION\r\n    useEffect(() => {\r\n        executeScroll();\r\n    }, [pageNumber])\r\n\r\n    const students = studentsData;\r\n    const studentsPerPage = 10;\r\n    const pagesVisited = pageNumber * studentsPerPage;\r\n\r\n    const pageCount = Math.ceil(students.length / studentsPerPage);\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    };\r\n\r\n    const displayUsers = students.slice(pagesVisited, pagesVisited + studentsPerPage).map((student, index) => { \r\n        let status = '';\r\n        if(student.Enrollment === null || student.Enrollment === undefined) {\r\n            status = 'Autentificat'\r\n        } else if(student.Enrollment && student.hallId === null) {\r\n            status = 'Inrolat';\r\n        } else if (student.Enrollment && student.hallId) {\r\n            status = 'Cazat';\r\n        }\r\n\r\n        return (\r\n            <div className=\"student-block\" key={`student-${student.uuid}`}>\r\n                <div className='student-block-primary-color' />\r\n                <div className=\"student-block-uni-logo\">\r\n                    <img \r\n                        src={tuiasiLogo} \r\n                        alt=\"Student Tuiasi\"\r\n                        className=\"background-image\" />\r\n                </div>\r\n                <div className=\"student-block-label-wrapper\">\r\n                    <span className=\"label\">Prenume</span>\r\n                    <span className=\"label-medium\">{student.first_name}</span>\r\n                </div>\r\n                <div className=\"student-block-label-wrapper\">\r\n                    <span className=\"label\">Nume</span>\r\n                    <span className=\"label-medium\">{student.last_name}</span>\r\n                </div>\r\n                <div className=\"student-block-label-wrapper\">\r\n                    <span className=\"label\">Status</span>\r\n                    <span className=\"label-medium\">{status}</span>\r\n                </div>\r\n                <div className=\"student-block-actions\">\r\n                    <button type=\"button\" className=\"button-action\" onClick={() => dispatchSelectedStudent(student.uuid)}>\r\n                        <IconContext.Provider value={{size: '24px', color: '#fafafa'}}>\r\n                            <FaRegEdit />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button-action\" onClick={() => toggleModal(student.uuid)}>\r\n                        <IconContext.Provider value={{size: '24px', color: '#fafafa'}} >\r\n                            <BsTrash  className=\"button-action-icon\"/>\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <DeleteModal toggled={modalOpen} toggleModal={toggleModal} handleDelete={handleDelete}/>\r\n            { error ? <GeneralErrorMessage>{error}</GeneralErrorMessage> : null}\r\n            <div className=\"pagination-content-blocks\" ref={blockRef}>\r\n                {displayUsers}\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={\"Previous\"}\r\n                nextLabel={\"Next\"}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"pagination-buttons-wrapper\"}\r\n                previousLinkClassName={\"previous-button\"}\r\n                nextLinkClassName={\"next-button\"}\r\n                disabledClassName={\"pagination-disabled\"}\r\n                activeClassName={\"pagination-active\"}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminDashboardPagination;\r\n","import React, { useEffect } from 'react';\r\nimport AdminDashboardNav from '../AdminDashboardNav/AdminDashboardNav';\r\nimport AdminDashboardSearch from '../AdminDashboardSearch/AdminDashboardSearch';\r\nimport AdminDashboardPagination from '../AdminDashboardPagination/AdminDashboardPagination';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { adminSelector } from '../../../redux/adminSlice';\r\n\r\nimport './AdminDashboardMain.scss'\r\n\r\nfunction AdminDashboardMain() {\r\n\r\n    // SLICE OF STATE\r\n    const adminState = useSelector(adminSelector);\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, 0); \r\n    \r\n    useEffect(() => {\r\n        executeScroll();\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"admin-dashboard-main\">\r\n            <div className=\"admin-dashboard-main-inner\">\r\n                <AdminDashboardNav />\r\n                <AdminDashboardSearch />\r\n                { Object.keys(adminState.students).length !== 0 && <AdminDashboardPagination studentsData={adminState.students} /> }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardMain;\r\n","import React from 'react';\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport AdminDashboardMain from '../components/AdminDashboard/AdminDashboardMain/AdminDashboardMain';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Informatii generale\"\r\n}\r\n\r\nfunction AdminDashboard() {\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData } title=\"Panoul administratorului\"/>    \r\n                <AdminDashboardMain />\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport './ButtonPrimary.scss';\r\n\r\nfunction Button({ type, disabled, onClick, textLabel }) {\r\n    return (\r\n        <button type={type} disabled={disabled} onClick={onClick} className=\"button-primary\">\r\n            <span className=\"button-primary-label label\">{textLabel}</span>\r\n            <IconContext.Provider value={{color: '#fafafa', size: '30px'}}>\r\n                <BsArrowRight />\r\n            </IconContext.Provider>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorMessageWrapper = styled.div`\r\n    width: 100%;\r\n    padding: 2.5rem 0;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    text-align: start;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nconst MessageLabel = styled.p`\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n    letter-spacing: 0.1rem;\r\n    color: #a50000;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nfunction ErrorMessageEl ({ children }) {\r\n    return (\r\n        <ErrorMessageWrapper>\r\n            <MessageLabel>{children}</MessageLabel>\r\n        </ErrorMessageWrapper>\r\n    )\r\n}\r\n\r\nexport default ErrorMessageEl;\r\n"],"sourceRoot":""}