{"version":3,"sources":["components/AdminDashboard/AdminDashboardCreateUser/AdminDashboardCreateUser.js","pages/AdminDashboardCreateAcc.js"],"names":["AdminDashboardCreateUser","useState","formError","setFormError","visiblePassword","setVisiblePassword","visibleConfirmPassword","setVisibleConfirmPassword","blockRef","useRef","useEffect","formik","useFormik","initialValues","first_name","last_name","email","password","password_confirm","role","validateOnBlur","enableReinitialize","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","axios","post","headers","withCredentials","credentials","then","response","catch","err","message","data","errors","msg","validationSchema","createStudentSchema","className","AdminDashboardNav","ref","GeneralErrorMessage","method","handleSubmit","htmlFor","type","id","name","value","onChange","handleChange","ErrorMessage","onClick","prevState","Provider","size","color","ButtonPrimary","textLabel","bannerData","isLink","subtitle","AdminDashboardCreateAcc","InitialTransition","Header","AuthBanner","sectionData","title","StatsSection","Footer"],"mappings":"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","file":"static/js/36.a7781955.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport AdminDashboardNav from '../AdminDashboardNav/AdminDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport { IconContext } from 'react-icons';\r\nimport { ImEye } from \"react-icons/im\";\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createStudentSchema } from '../../../validation/AdminSchema';\r\nimport './AdminDashboardCreateUser.scss';\r\n\r\nfunction AdminDashboardCreateUser() {\r\n\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const [ visiblePassword, setVisiblePassword ] = useState(false);\r\n    const [ visibleConfirmPassword, setVisibleConfirmPassword ] = useState(false);\r\n    // REF\r\n    const blockRef = useRef(null);  \r\n    // EFFECT\r\n    useEffect(() => {\r\n        setFormError('');\r\n    }, []);\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    const onSubmit = (values, { resetForm }) => {   \r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },\r\n        }\r\n\r\n        axios.post(`/api/v1/users/`, values, reqConfig).then((response) => {\r\n            setFormError('Student creat!');\r\n            resetForm();\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            setFormError(message);\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name:'',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            role:'',\r\n        },\r\n        validateOnBlur: true,\r\n        enableReinitialize: true,\r\n        onSubmit,\r\n        validationSchema: createStudentSchema\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"dashboard-account-create\">\r\n            <div className=\"dashboard-account-create-inner\">\r\n                <AdminDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga un student</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-account-create-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"first_name\" className=\"form-group-label label\">Prenumele studentului.*</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"first_name\" \r\n                                className=\"form-group-input\" \r\n                                name=\"first_name\"\r\n                                value={formik.values.first_name}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                        {formik.errors.first_name && <ErrorMessageEl>{formik.errors.first_name}</ErrorMessageEl>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"last_name\" className=\"form-group-label label\">Numele studentului.*</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"last_name\" \r\n                                className=\"form-group-input\"\r\n                                name=\"last_name\"\r\n                                value={formik.values.last_name}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.last_name && <ErrorMessageEl>{formik.errors.last_name}</ErrorMessageEl>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"form-group-label label\">Email-ul studentului.*</label>\r\n                            <input \r\n                                type=\"email\" \r\n                                id=\"email\" \r\n                                className=\"form-group-input\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.email && <ErrorMessageEl>{formik.errors.email}</ErrorMessageEl>}       \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\" className=\"form-group-label label\">Parola studentului*</label>\r\n                            <div className=\"input-wrapper\">\r\n                                <input \r\n                                    type={visiblePassword ? \"text\" : \"password\"}\r\n                                    id=\"password\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"password\"\r\n                                    value={formik.values.password}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                <button type=\"button\" onClick={() => setVisiblePassword(prevState => !prevState)} className=\"show-password-button\">\r\n                                    <IconContext.Provider value={{size: '30px', color: visiblePassword ? '#464646' : '#fafafa'}}>\r\n                                        <ImEye />\r\n                                    </IconContext.Provider>\r\n                                </button>\r\n                            </div>\r\n                            {formik.errors.password && <ErrorMessageEl>{formik.errors.password}</ErrorMessageEl>}  \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_confirm\" className=\"form-group-label label\">Confirma parola studentului*</label>\r\n                            <div className=\"input-wrapper\">\r\n                                <input \r\n                                    type={visibleConfirmPassword ? \"text\" : \"password\"}\r\n                                    id=\"password_confirm\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"password_confirm\"\r\n                                    value={formik.values.password_confirm}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                <button type=\"button\" onClick={() => setVisibleConfirmPassword(prevState => !prevState)} className=\"show-password-button\">\r\n                                    <IconContext.Provider value={{size: '30px', color: visibleConfirmPassword ? '#464646' : '#fafafa'}}>\r\n                                        <ImEye />\r\n                                    </IconContext.Provider>\r\n                                </button>\r\n                            </div>\r\n                            {formik.errors.password_confirm && <ErrorMessageEl>{formik.errors.password_confirm}</ErrorMessageEl>}  \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"role\" className=\"form-group-label label\">Rolul dorit.*</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"role\" \r\n                                className=\"form-group-input\"\r\n                                name=\"role\"\r\n                                value={formik.values.role}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.role && <ErrorMessageEl>{formik.errors.role}</ErrorMessageEl>}       \r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Adauga un student\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardCreateUser;\r\n","import React from 'react';\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport AdminDashboardCreateUser from '../components/AdminDashboard/AdminDashboardCreateUser/AdminDashboardCreateUser';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: 'Adauga studenti'\r\n}\r\n\r\nfunction AdminDashboardCreateAcc() {\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData } title=\"Panoul administratorului\"/>    \r\n                <AdminDashboardCreateUser />\r\n                <StatsSection />\r\n            </main>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardCreateAcc;\r\n"],"sourceRoot":""}