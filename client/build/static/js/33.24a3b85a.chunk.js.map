{"version":3,"sources":["validation/AuthSchema.js","data/AuthData.js","components/auth/RegisterComponent/RegisterComponent.js","pages/Register.js"],"names":["PASSWORD_REGEX","loginSchema","yup","email","required","password","matches","registerSchema","first_name","min","last_name","password_confirm","when","is","val","length","then","oneOf","forgotPwdSchema","resetPwdSchema","loginBannerData","isLink","path","pathLabel","subtitle","registerBannerData","forgotPasswordBannerData","resetPasswordBannerData","RegisterComponent","history","useHistory","useState","formError","setFormError","blockRef","useRef","formik","useFormik","initialValues","validateOnBlur","onSubmit","values","window","scrollTo","current","offsetTop","user","axios","post","headers","withCredentials","credentials","response","status","console","log","push","catch","err","message","data","validationSchema","className","ref","ErrorMessage","method","handleSubmit","htmlFor","type","id","name","value","onChange","handleChange","errors","ButtonPrimary","textLabel","Register","InitialTransition","Header","AuthBanner","sectionData","StatsSection","Footer"],"mappings":"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","file":"static/js/33.24a3b85a.chunk.js","sourcesContent":["// FORM LIBRARY\r\nimport * as yup from 'yup';\r\n\r\n// PWD REGET EXPRESSION\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n// LOGIN SCHEMA\r\nexport const loginSchema = yup.object({\r\n    email: yup.string().required(\"You must enter your e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n    password: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\")\r\n});\r\n\r\n// REGISTER SCHEMA\r\nexport const registerSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter your first name\").min(3, \"Your first name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter your last name\").min(3, \"Your last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter your e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n    password: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_confirm: yup.string().required(\"You must enter a password confirm\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password\")], \"Your confirm password does not match, please try again\")\r\n    })\r\n}); \r\n\r\n// FORGOT PASSWORD SCHEMA\r\nexport const forgotPwdSchema = yup.object({\r\n    email: yup.string().required(\"You must enter your e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n});\r\n\r\n// RESET PASSWORD SCHEMA\r\nexport const resetPwdSchema = yup.object({\r\n    password: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_confirm: yup.string().required(\"You must enter a password confirm\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password\")], \"Your confirm password does not match, please try again\")\r\n    })\r\n});\r\n\r\n\r\n","export const loginBannerData =  {\r\n    isLink: true,\r\n    path: '/register',\r\n    pathLabel: 'Register',\r\n    subtitle: \"Don't have an account?\"\r\n}\r\n\r\nexport const registerBannerData = {\r\n    isLink: true,\r\n    path: '/login',\r\n    pathLabel: 'Login',\r\n    subtitle: \"Alreaday a member of our family? Join your account\"\r\n}\r\n\r\nexport const forgotPasswordBannerData = {\r\n    isLink: null,\r\n    subtitle: \"Reset your password and join our family.\"\r\n}\r\n\r\nexport const resetPasswordBannerData = {\r\n    isLink: null,\r\n    subtitle: \"Enter a new password and we will redirect you to login page.\"\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { registerSchema } from '../../../validation/AuthSchema';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './RegisterComponent.scss';\r\n\r\nfunction RegisterComponent() {\r\n\r\n    const history = useHistory();\r\n\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    const onSubmit = (values) => {\r\n\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const user = {\r\n            first_name: values.first_name,\r\n            last_name: values.last_name,\r\n            email: values.email,\r\n            password: values.password\r\n        }\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },\r\n        }\r\n\r\n        axios.post(\"/api/v1/users/register\", user, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                console.log('registration success');\r\n                history.push('/login');\r\n            }\r\n        }).catch(err => {\r\n            const { message } = err.response.data;\r\n            setFormError(message);\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: ''\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: registerSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"register-form-section\" ref={blockRef}>\r\n            <div className=\"register-form-section-inner\">\r\n                <div className=\"register-heading-wrapper\">\r\n                    <h3 className=\"register-title heading-three\">Create an account</h3>    \r\n                    {formError ? <ErrorMessageEl>{formError}</ErrorMessageEl> : null }\r\n                </div>     \r\n                <form className=\"register-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\" className=\"form-group-label label\">Prenumele dvs.*</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"firstName\" \r\n                            className=\"form-group-input\" \r\n                            name=\"first_name\"\r\n                            value={formik.values.first_name}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                       {formik.errors.first_name && <ErrorMessageEl>{formik.errors.first_name}</ErrorMessageEl>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\" className=\"form-group-label label\">Numele dvs.*</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"lastName\" \r\n                            className=\"form-group-input\"\r\n                            name=\"last_name\"\r\n                            value={formik.values.last_name}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        {formik.errors.last_name && <ErrorMessageEl>{formik.errors.last_name}</ErrorMessageEl>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className=\"form-group-label label\">Email-ul dvs.*</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            className=\"form-group-input\"\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        {formik.errors.email && <ErrorMessageEl>{formik.errors.email}</ErrorMessageEl>}       \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"form-group-label label\">Parola dvs.*</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            id=\"password\" \r\n                            className=\"form-group-input\" \r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                         {formik.errors.password && <ErrorMessageEl>{formik.errors.password}</ErrorMessageEl>}  \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password2\" className=\"form-group-label label\">Reintroduceti parola dvs.*</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            id=\"password2\" \r\n                            className=\"form-group-input\" \r\n                            name=\"password_confirm\"\r\n                            value={formik.values.password_confirm}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        {formik.errors.password_confirm && <ErrorMessageEl>{formik.errors.password_confirm}</ErrorMessageEl>}  \r\n                    </div>\r\n                    <ButtonPrimary type=\"submit\" textLabel=\"Inregistreaza-te\" />\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RegisterComponent;","import React from 'react';\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport RegisterComponent from '../components/auth/RegisterComponent/RegisterComponent';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer'\r\nimport {registerBannerData} from '../data/AuthData';\r\n\r\nfunction Register() {\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={registerBannerData}/>    \r\n                <RegisterComponent />\r\n                <StatsSection />\r\n            </main>   \r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}