{"version":3,"sources":["redux/userSlice.js","redux/adminSlice.js","utils/InitialTransition/InitialTransition.js","redux/userMetaSlice.js","redux/userEnrollSlice.js","redux/accommodationSlice.js","assets/images/Universities/embleme-tuiasi-rr-1-300x189.png","utils/ScrollToTop.js","utils/PrivateRoute.js","utils/PublicRoute.js","utils/Routes.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","isFetching","isSuccess","isError","isAuthenticated","errorMessage","reducers","requestLogin","state","receiveLogin","payload","loginError","handleLogout","logoutError","requestCheckLogin","receiveCheckLogin","checkLoginError","requestUpdatePwd","receiveUpdatePwd","updatePwdError","requestAccountUpdate","receiveAccountUpdate","updateAccountError","actions","userSelector","adminSlice","selectedUser","students","requestSelectedUser","receiveSelectedUser","selectedUserError","requestStudents","receiveStudents","studentsError","requestDeleteStudents","receiveDeleteStudents","filter","student","uuid","studentsDeleteError","adminSelector","admin","blackBox","initial","height","bottom","animate","transition","when","duration","ease","exit","textContainer","opacity","text","y","InitialTransition","useEffect","window","scrollTo","div","className","variants","onAnimationStart","document","body","classList","add","onAnimationComplete","remove","svg","id","patternUnits","width","rect","textAnchor","x","style","fill","userMetaSlice","userKins","currentKin","userMeta","isMetaCreated","requestKins","receiveKins","kinsError","requestKin","receiveKin","kinError","requestCreateMeta","receiveCreateMeta","createMetaError","requestGetMeta","receiveGetMeta","getMetaError","requestUpdateMeta","receiveUpdateMeta","updateMetaError","requestDeleteMeta","receiveDeleteMeta","deleteMetaError","userMetaSelector","userEnrollSlice","enrollment","isEnrolled","requestEnroll","receiveEnroll","enrollError","requestUpdateEnroll","receiveUpdateEnroll","updateEnrollError","requestDeleteEnroll","receiveDeleteEnroll","deleteEnrollError","userEnrollSelector","userEnroll","accommodationSlice","accommodation","isAccommodated","requestAccommodation","receiveAccommodation","accommodationError","accommodationSelector","ScrollToTop","pathname","useLocation","PrivateRoute","Component","component","role","rest","userState","useSelector","render","props","Object","keys","length","to","from","location","PublicRoute","first_name","last_name","Index","lazy","About","Contact","News","Organisations","StudentServices","Cafetaria","SportsBase","Tuiasi","HealthSecurity","Police","Dispensary","CounselingCenter","Accommodation","ResidenceHalls","ResidenceHall","FAQ","Post","AdminDashboard","AdminDashboardAccountInfo","AdminDashboardPassword","AdminDashboardCreateAcc","AdminDashboardStudent","StudentDashboard","StudentDashboardPwdUpdate","StudentDashboardAccountInfo","StudentDashboardEnrollment","StudentDashboardEnrollmentConfirm","StudentDashboardInformation","StudentDashboardKin","StudentDashboardKinUpdate","campusRoutes","path","exact","publicRoutes","studentRoutes","adminRoutes","Page404","App","dispatch","useDispatch","app","useRef","axios","get","then","response","status","userData","data","catch","err","message","gsap","current","visibility","ref","AnimatePresence","exitBeforeEnter","fallback","map","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a94f445b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        isFetching: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        isAuthenticated: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers: {\r\n        requestLogin: (state) => {\r\n            state.isFetching = true;\r\n            state.isAuthenticated = false;\r\n        },\r\n        receiveLogin: (state, { payload }) => {\r\n            state.user = payload;\r\n            state.isAuthenticated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        loginError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isAuthenticated = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        handleLogout: (state) => {\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isAuthenticated = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n            state.user = {};\r\n        },\r\n        logoutError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestCheckLogin: (state) => {\r\n            state.isFetching = true;\r\n            state.isAuthenticated = false;\r\n        },\r\n        receiveCheckLogin: (state, { payload }) => {\r\n            state.user = payload;\r\n            state.isAuthenticated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        checkLoginError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isAuthenticated = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestUpdatePwd: (state) => {\r\n            state.isFetching = true;\r\n            state.isAuthenticated = true;\r\n        },\r\n        receiveUpdatePwd: (state, { payload }) => {\r\n            state.user = payload;\r\n            state.isAuthenticated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        updatePwdError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isAuthenticated = true;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestAccountUpdate: (state) => {\r\n            state.isFetching = true;\r\n            state.isAuthenticated = true;\r\n        },\r\n        receiveAccountUpdate: (state, { payload }) => {\r\n            state.user = payload;\r\n            state.isAuthenticated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        updateAccountError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isAuthenticated = true;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { requestLogin, \r\n    receiveLogin, \r\n    loginError, \r\n    handleLogout, \r\n    logoutError, \r\n    requestCheckLogin,\r\n    receiveCheckLogin,\r\n    checkLoginError,\r\n    requestUpdatePwd,\r\n    receiveUpdatePwd,\r\n    updatePwdError,\r\n    requestAccountUpdate,\r\n    receiveAccountUpdate,\r\n    updateAccountError\r\n\r\n} = userSlice.actions;\r\nexport const userSelector = (state) => state.user;\r\nexport default userSlice.reducer;\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const adminSlice = createSlice({\r\n    name: 'admin',\r\n    initialState: {\r\n        selectedUser: {},\r\n        students: [],\r\n        isFetching: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers: {\r\n        requestSelectedUser: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveSelectedUser: (state, { payload }) => {\r\n            state.selectedUser = payload;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        selectedUserError: (state, { payload }) => {\r\n            state.selectedUser = {};\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestStudents: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveStudents: (state, { payload }) => {\r\n            state.students = payload;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        studentsError: (state, { payload }) => {\r\n            state.students = [];\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestDeleteStudents: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveDeleteStudents: (state, { payload }) => {\r\n            state.students = state.students.filter((student) => student.uuid !== payload);\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        studentsDeleteError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { \r\n    requestSelectedUser,\r\n    receiveSelectedUser,\r\n    selectedUserError,\r\n    requestStudents,\r\n    receiveStudents,\r\n    studentsError,\r\n    requestDeleteStudents,\r\n    receiveDeleteStudents,\r\n    studentsDeleteError\r\n\r\n} = adminSlice.actions;\r\nexport const adminSelector = (state) => state.admin;\r\nexport default adminSlice.reducer;","import React, { useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport './InitialTransition.scss';\r\nimport TuiasiLogo from '../../assets/images/Universities/embleme-tuiasi-rr-1-300x189.png';\r\n\r\nconst blackBox = {\r\n    initial: {\r\n        height: \"100%\",\r\n        bottom: 0,\r\n    },\r\n    animate: {\r\n        height: 0,\r\n        transition: {\r\n            when: \"afterChildren\",\r\n            duration: 1.5,\r\n            ease: [0.87, 0, 0.13, 1],\r\n        },\r\n    },\r\n    exit: {\r\n        height: \"100%\",\r\n        bottom: 0,\r\n    }\r\n};\r\n  \r\nconst textContainer = {\r\n    initial: {\r\n        opacity: 1,\r\n    },\r\n    animate: {\r\n        opacity: 0,\r\n        transition: {\r\n        duration: 0.3,\r\n        when: \"afterChildren\",\r\n        },\r\n    },\r\n};\r\n  \r\nconst text = {\r\n    initial: {\r\n        y: 40,\r\n    },\r\n    animate: {\r\n        y: 80,\r\n        transition: {\r\n        duration: 1.5,\r\n        ease: [0.87, 0, 0.13, 1],\r\n        },\r\n    },\r\n};\r\n\r\nconst InitialTransition = () => {\r\n    useEffect(() => {\r\n        // RESET SCROLL POS ON RENDER\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n  \r\n    return (\r\n        <motion.div\r\n            className=\"black-box-wrapper\"\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            variants={blackBox}\r\n            onAnimationStart={() => document.body.classList.add(\"overflow-hidden\")}\r\n            onAnimationComplete={() =>\r\n                document.body.classList.remove(\"overflow-hidden\")\r\n            }\r\n        >\r\n            <motion.svg variants={textContainer} className=\"absolute-svg\">\r\n                <pattern\r\n                    id=\"pattern\"\r\n                    patternUnits=\"userSpaceOnUse\"\r\n                    width={750}\r\n                    height={800}\r\n                    className=\"text-white\"\r\n                >\r\n                    <rect className=\"svg-rect\" />\r\n                    <motion.rect\r\n                        variants={text}\r\n                        className=\"svg-rect-anim\"\r\n                    />\r\n                </pattern>\r\n                <text\r\n                    className=\"svg-text\"\r\n                    textAnchor=\"middle\"\r\n                    x=\"50%\"\r\n                    y=\"50%\"\r\n                    style={{ fill: \"#fafafa\" }}\r\n                >\r\n                    Tudor Vladimirescu\r\n                </text>\r\n            </motion.svg>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default InitialTransition;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userMetaSlice = createSlice({\r\n    name: 'userMeta',\r\n    initialState: {\r\n        userKins: [],\r\n        currentKin: {},\r\n        userMeta: {},\r\n        isMetaCreated: false,\r\n        isFetching: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers: {\r\n        requestKins: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveKins: (state, { payload }) => {\r\n            state.userKins = payload;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        kinsError: (state, { payload }) => {\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestKin: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveKin: (state, { payload }) => {\r\n            state.currentKin = payload;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        kinError: (state, { payload }) => {\r\n            state.currentKin = {};\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestCreateMeta: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveCreateMeta: (state, { payload }) => {\r\n            state.userMeta = payload;\r\n            state.isMetaCreated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        createMetaError: (state, { payload }) => {\r\n            state.userMeta = {};\r\n            state.isMetaCreated = false;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestGetMeta: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveGetMeta: (state, { payload }) => {\r\n            state.userMeta = payload;\r\n            state.isMetaCreated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        getMetaError: (state, { payload }) => {\r\n            state.userMeta = {};\r\n            state.isMetaCreated = false;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestUpdateMeta: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveUpdateMeta: (state, { payload }) => {\r\n            state.userMeta = payload;\r\n            state.isMetaCreated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        updateMetaError: (state, { payload }) => {\r\n            state.isMetaCreated = true;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestDeleteMeta: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveDeleteMeta: (state) => {\r\n            state.userMeta = {};\r\n            state.isMetaCreated = false;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        deleteMetaError: (state, { payload }) => {\r\n            state.isMetaCreated = true;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { \r\n    requestKins, \r\n    receiveKins, \r\n    kinsError, \r\n    requestKin,\r\n    receiveKin,\r\n    kinError,\r\n    requestCreateMeta,\r\n    receiveCreateMeta,\r\n    createMetaError,\r\n    requestGetMeta,\r\n    receiveGetMeta,\r\n    getMetaError,\r\n    requestUpdateMeta,\r\n    receiveUpdateMeta,\r\n    updateMetaError,\r\n    requestDeleteMeta,\r\n    receiveDeleteMeta,\r\n    deleteMetaError\r\n\r\n} = userMetaSlice.actions;\r\nexport const userMetaSelector = (state) => state.userMeta;\r\nexport default userMetaSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userEnrollSlice = createSlice({\r\n    name: 'userEnroll',\r\n    initialState: {\r\n        enrollment: {},\r\n        isEnrolled: false,\r\n        isFetching: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers: {\r\n        requestEnroll: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveEnroll: (state, { payload }) => {\r\n            state.enrollment = payload;\r\n            state.isEnrolled = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        enrollError: (state, { payload }) => {\r\n            state.enrollment = {};\r\n            state.isEnrolled = false;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestUpdateEnroll: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveUpdateEnroll: (state, { payload }) => {\r\n            state.enrollment = payload;\r\n            state.isEnrolled = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        updateEnrollError: (state, { payload }) => {\r\n            state.isEnrolled = false;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n\r\n        requestDeleteEnroll: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveDeleteEnroll: (state, { payload }) => {\r\n            state.enrollment = {};\r\n            state.isEnrolled = false;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        deleteEnrollError: (state, { payload }) => {\r\n            state.isEnrolled = true;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { \r\n    requestEnroll,\r\n    receiveEnroll,\r\n    enrollError,\r\n    requestUpdateEnroll,\r\n    receiveUpdateEnroll,\r\n    updateEnrollError,\r\n    requestDeleteEnroll,\r\n    receiveDeleteEnroll,\r\n    deleteEnrollError\r\n\r\n} = userEnrollSlice.actions;\r\nexport const userEnrollSelector = (state) => state.userEnroll;\r\nexport default userEnrollSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const accommodationSlice = createSlice({\r\n    name: 'accommodation',\r\n    initialState: {\r\n        accommodation: {},\r\n        isAccommodated: false,\r\n        isFetching: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers: {\r\n        requestAccommodation: (state) => {\r\n            state.isFetching = true;\r\n        },\r\n        receiveAccommodation: (state, { payload }) => {\r\n            state.accommodation = payload;\r\n            state.isAccommodated = true;\r\n            state.isSuccess = true;\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.errorMessage = '';\r\n        },\r\n        accommodationError: (state, { payload }) => {\r\n            state.accommodation = {};\r\n            state.isAccommodated = false;\r\n            state.isSuccess = false;\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.errorMessage = payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { \r\n    requestAccommodation,\r\n    receiveAccommodation,\r\n    accommodationError,\r\n\r\n} = accommodationSlice.actions;\r\nexport const accommodationSelector = (state) => state.accommodation;\r\nexport default accommodationSlice.reducer;","export default __webpack_public_path__ + \"static/media/embleme-tuiasi-rr-1-300x189.f2525a43.png\";","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction ScrollToTop() {\r\n\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null\r\n}\r\n\r\nexport default ScrollToTop;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../redux/userSlice';\r\n\r\nexport const PrivateRoute = ({ component: Component, role, ...rest }) => {\r\n\r\n    // SLICE OF STATE\r\n    const userState = useSelector(userSelector);\r\n\r\n    if(!userState.isAuthenticated) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return <Route {...rest} render={props => {\r\n        if (Object.keys(userState.user).length === 0 || !userState.user) {\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (role && (role !== userState.user.role)) {\r\n            // role not authorised so redirect to home page\r\n            return <Redirect to={{ pathname: '/'}} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component {...props} />\r\n    }}/>\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../redux/userSlice';\r\n\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            userState.isAuthenticated ? \r\n                <Redirect to={userState.user.role === 'admin' ? '/admin' : `/${userState.user.first_name}.${userState.user.last_name}/dashboard`} />\r\n                : <Component {...props} />\r\n        )} />\r\n    );\r\n}\r\n\r\nexport default PublicRoute;\r\n","import { lazy } from 'react';\r\n\r\n// CAMPUS LAZY ROUTES\r\nconst Index = lazy(()=> import('../pages/Index'));\r\nconst About = lazy(()=> import('../pages/About'));\r\nconst Contact = lazy(()=> import('../pages/Contact'));\r\nconst News = lazy(()=> import('../pages/News'));\r\nconst Organisations = lazy(()=> import('../pages/Organisations'));\r\nconst StudentServices = lazy(()=> import('../pages/StudentServices'));\r\nconst Cafetaria = lazy(()=> import('../pages/Cafetaria'));\r\nconst SportsBase = lazy(()=> import('../pages/SportsBase'));\r\nconst Tuiasi = lazy(()=> import('../pages/Tuiasi'));\r\nconst HealthSecurity = lazy(()=> import('../pages/HealthSecurity'));\r\nconst Police = lazy(()=> import('../pages/Police'));\r\nconst Dispensary = lazy(()=> import('../pages/Dispensary'));\r\nconst CounselingCenter = lazy(()=> import('../pages/CounselingCenter'));\r\nconst Accommodation = lazy(()=> import('../pages/Accommodation'));\r\nconst ResidenceHalls = lazy(()=> import('../pages/ResidenceHalls'));\r\nconst ResidenceHall = lazy(()=> import('../pages/ResidenceHall'));\r\nconst FAQ = lazy(()=> import('../pages/FAQ'));\r\nconst Post = lazy(()=> import('../pages/Post'));\r\n\r\n// ADMIN LAZY ROUTES\r\nconst AdminDashboard = lazy(()=> import('../pages/AdminDashboard'));\r\nconst AdminDashboardAccountInfo = lazy(()=> import('../pages/AdminDashboardAccountInfo'));\r\nconst AdminDashboardPassword = lazy(()=> import('../pages/AdminDashboardPassword'));\r\nconst AdminDashboardCreateAcc = lazy(()=> import('../pages/AdminDashboardCreateAcc'));\r\nconst AdminDashboardStudent = lazy(()=> import('../pages/AdminDashboardStudent'));\r\n\r\n// STUDENT LAZY ROUTES\r\nconst StudentDashboard = lazy(()=> import('../pages/StudentDashboard'));\r\nconst StudentDashboardPwdUpdate = lazy(()=> import('../pages/StudentDashboardPwdUpdate'));\r\nconst StudentDashboardAccountInfo = lazy(()=> import('../pages/StudentDashboardAccountInfo'));\r\nconst StudentDashboardEnrollment = lazy(()=> import('../pages/StudentDashboardEnrollment'));\r\nconst StudentDashboardEnrollmentConfirm = lazy(()=> import('../pages/StudentDashboardEnrollmentConfirm'));\r\nconst StudentDashboardInformation = lazy(()=> import('../pages/StudentDashboardInfromation'));\r\nconst StudentDashboardKin = lazy(()=> import('../pages/StudentDashboardKin'));\r\nconst StudentDashboardKinUpdate = lazy(()=> import('../pages/StudentDashboardKinUpdate'));\r\n\r\n// PUBLIC LAZY ROUTES\r\nconst Login = lazy(()=> import('../pages/Login'));\r\nconst Register = lazy(()=> import('../pages/Register'));\r\nconst ForgotPassword = lazy(()=> import('../pages/ForgotPassword'));\r\nconst ResetPassword = lazy(()=> import('../pages/ResetPassword'));\r\n\r\n\r\nexport const campusRoutes = [\r\n    {\r\n        path: '/',\r\n        component: Index,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/about',\r\n        component: About,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/contact',\r\n        component: Contact,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/news',\r\n        component: News,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/news/:post',\r\n        component: Post,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/health-security',\r\n        component: HealthSecurity,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/health-security/police',\r\n        component: Police,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/health-security/dispensary',\r\n        component: Dispensary,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/health-security/counseling-center',\r\n        component: CounselingCenter,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/organisations',\r\n        component: Organisations,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/dss',\r\n        component: StudentServices,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/cafeteria',\r\n        component: Cafetaria,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/sports-base',\r\n        component: SportsBase,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/tuiasi',\r\n        component: Tuiasi,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/accommodation',\r\n        component: Accommodation,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/residence-halls',\r\n        component: ResidenceHalls,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/residence-halls/:hallName',\r\n        component: ResidenceHall,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/questions',\r\n        component: FAQ,\r\n        exact: true,\r\n    },\r\n];\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/register',\r\n        component: Register,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/forgot-password',\r\n        component: ForgotPassword,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/reset-password/:id',\r\n        component: ResetPassword,\r\n        exact: true,\r\n    },\r\n];\r\n\r\nexport const studentRoutes = [\r\n    {\r\n        path: '/:name/dashboard',\r\n        component: StudentDashboard,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/update-password',\r\n        component: StudentDashboardPwdUpdate,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/update-details',\r\n        component: StudentDashboardAccountInfo,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/enrollment',\r\n        component: StudentDashboardEnrollment,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/enrollment/success',\r\n        component: StudentDashboardEnrollmentConfirm,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/information',\r\n        component: StudentDashboardInformation,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/kins',\r\n        component: StudentDashboardKin,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/:name/kins/:id',\r\n        component: StudentDashboardKinUpdate,\r\n        role: 'student',\r\n        exact: true,\r\n    },\r\n];\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: '/admin',\r\n        component: AdminDashboard,\r\n        role: 'admin',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/admin-details',\r\n        component: AdminDashboardAccountInfo,\r\n        role: 'admin',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/admin-password',\r\n        component: AdminDashboardPassword,\r\n        role: 'admin',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/admin/:id',\r\n        component: AdminDashboardStudent,\r\n        role: 'admin',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/admin-create',\r\n        component: AdminDashboardCreateAcc,\r\n        role: 'admin',\r\n        exact: true,\r\n    },\r\n];\r\n","import React, { useEffect, useRef, lazy, Suspense } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { gsap } from 'gsap';\nimport { AnimatePresence } from 'framer-motion';\nimport InitialTransition from './utils/InitialTransition/InitialTransition';\nimport axios from 'axios';\n\n// REDUX\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestCheckLogin, receiveCheckLogin, checkLoginError } from './redux/userSlice';\nimport { adminSelector } from './redux/adminSlice';\n\n// UTILS\nimport ScrollToTop from './utils/ScrollToTop';\nimport PrivateRoute from './utils/PrivateRoute';\nimport PublicRoute from './utils/PublicRoute';\nimport { campusRoutes, publicRoutes, studentRoutes, adminRoutes } from './utils/Routes';\n\nconst Page404 = lazy(()=> import('./pages/Page404'));\n\nfunction App() {\n\n  // HOOKS\n  const dispatch = useDispatch();\n  const adminState = useSelector(adminSelector);\n  const location = useLocation();\n\n  // REF\"S\n  const app = useRef(null);\n  // FETCH AUTH USER ON RENDER\n  useEffect(() => {\n    const fetchUser = () => {\n      // INIT REQ\n      dispatch(requestCheckLogin);\n\n      // const reqConfig = {\n      //   headers: {\n      //       'Content-Type': 'application/json',\n      //       withCredentials: true,\n      //       credentials: 'include'\n      //   },\n      //   mode: 'cors'\n      // }\n  \n      axios.get(\"/api/v1/users/checkLogin\").then((response) => {\n          if(response.status === 200 || response.status === 201) {\n            const { userData } = response.data;\n            dispatch(receiveCheckLogin(userData));\n          } else {\n              dispatch(checkLoginError('There is an error, please try again'));\n          }\n      }).catch(err => {\n          const { message } = err.response.data;\n          dispatch(checkLoginError(message ? message : ''));\n      })\n    }\n\n    fetchUser();\n  }, [dispatch]);\n\n  //EFFECT\n  useEffect(() => {\n    gsap.to(app.current, {duration: 0, visibility: 'visible'});\n  }, []);\n\n  return (\n      <>\n        <ScrollToTop />\n        <div className=\"App\" ref={app}>\n        <AnimatePresence exitBeforeEnter>\n          <Suspense fallback={<InitialTransition />}> \n            <Switch location={location} key={location.pathname}>\n\n              {/* PRIVATE ADMIN ROUTES */}\n              { adminRoutes.map(route => (\n                  <PrivateRoute key={ route.path } role={ route.role } component={ route.component } exact={ route.exact } path={ route.path } />\n              )) }\n\n              {/* PRIVATE STUDENT ROUTES */}\n              { studentRoutes.map(route => (\n                  <PrivateRoute key={ route.path } role={ route.role } component={ route.component } exact={ route.exact } path={ route.path } />\n              )) }\n\n              {/* PUBLIC AUTH ROUTES */}\n              { publicRoutes.map(route => (\n                  <PublicRoute key={ route.path } component={ route.component } exact={ route.exact } path={ route.path } />\n              )) }\n\n              {/* USER  ROUTES */}\n              { campusRoutes.map(route=>(\n                 <Route key={ route.path }  exact={ route.exact } path={ route.path } component={ route.component } />\n              )) }\n\n              {/* 404 ROUT */}\n              <Route component={Page404} />\n\n              {/* <PrivateRoute role=\"admin\" component={AdminDashboard} exact path=\"/admin\" />\n              <PrivateRoute role=\"admin\" component={AdminDashboardAccountInfo} exact path=\"/admin-details\" />\n              <PrivateRoute role=\"admin\" component={AdminDashboardPassword} exact path=\"/admin-password\" /> */}\n              {/* {Object.keys(adminState.selectedUser).length !== 0 \n                ? <PrivateRoute role=\"admin\" component={AdminDashboardStudent} exact path=\"/admin/:id\" /> \n                : null}\n              <PrivateRoute role=\"admin\" component={AdminDashboardCreateAcc} exact path=\"/admin-create\" /> */}\n                \n              {/* PRIVATE USER ROUTES */}\n              {/* <PrivateRoute  role=\"student\" component={StudentDashboard} exact path=\"/:name/dashboard\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardPwdUpdate} exact path=\"/:name/update-password\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardAccountInfo} exact path=\"/:name/update-details\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardEnrollment} exact path=\"/:name/enrollment\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardEnrollmentConfirm} exact path=\"/:name/enrollment/success\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardInformation} exact path=\"/:name/information\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardKin} exact path=\"/:name/kins\" />\n              <PrivateRoute  role=\"student\" component={StudentDashboardKinUpdate} exact path=\"/:name/kins/:id\" /> */}\n\n              {/* USER AUTH ROUTES */}\n              {/* <PublicRoute component={Login} exact path=\"/login\" />\n              <PublicRoute component={ForgotPassword} exact path=\"/forgot-password\" />\n              <PublicRoute component={ResetPassword} exact path=\"/reset-password/:id\" />\n              <PublicRoute component={Register} exact path=\"/register\" /> */}\n  \n              {/* <Route exact path=\"/\">\n                <Index />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/contact\">\n                <Contact />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n              <Route path=\"/news/:post\">\n                <Post />\n              </Route>\n              <Route exact path=\"/health-security\">\n                <HealthSecurity />\n              </Route>\n              <Route path=\"/health-security/police\">\n                <Police />\n              </Route>\n              <Route path=\"/health-security/dispensary\">\n                <Dispensary />\n              </Route>\n              <Route path=\"/health-security/counseling-center\">\n                <CounselingCenter />\n              </Route>\n              <Route path=\"/organisations\">\n                <Organisations />\n              </Route>\n              <Route path=\"/dss\">\n                <StudentServices />\n              </Route>\n              <Route path=\"/cafeteria\">\n                <Cafetaria />\n              </Route>\n              <Route path=\"/sports-base\">\n                <SportsBase />\n              </Route>\n              <Route path=\"/tuiasi\">\n                <Tuiasi />\n              </Route>\n              <Route path=\"/accommodation\">\n                <Accommodation />\n              </Route>\n              <Route exact path=\"/residence-halls\">\n                <ResidenceHalls />\n              </Route>\n              <Route exact path=\"/residence-halls/:hallName\">\n                <ResidenceHall />\n              </Route>\n              <Route path=\"/questions\">\n                <FAQ />\n              </Route> */}\n\n            </Switch>\n          </Suspense>\n        </AnimatePresence>\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { adminSlice } from './adminSlice';\r\nimport { userSlice } from './userSlice';\r\nimport { userMetaSlice } from './userMetaSlice';\r\nimport { userEnrollSlice } from './userEnrollSlice';\r\nimport { accommodationSlice } from './accommodationSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    admin: adminSlice.reducer,\r\n    user: userSlice.reducer,\r\n    userMeta: userMetaSlice.reducer,\r\n    userEnroll: userEnrollSlice.reducer,\r\n    accommodation: accommodationSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n//STYLES\nimport './scss/_reset.scss';\nimport './scss/_globalStyles.scss';\nimport './scss/_typography.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}