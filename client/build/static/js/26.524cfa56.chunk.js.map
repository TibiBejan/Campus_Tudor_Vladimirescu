{"version":3,"sources":["components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/StudentDashboard/StudentDashboardCreateInfo/StudentDashboardCreateInfo.js","components/StudentDashboard/StudentDashboardUpdateInfo/StudentDashboardUpdateInfo.js","pages/StudentDashboardInfromation.js"],"names":["StudentDashboardNav","userState","useSelector","userSelector","className","to","user","first_name","last_name","activeClassName","StudentDashboardCreateInfo","dispatch","useDispatch","history","useHistory","useState","formError","setFormError","blockRef","useRef","formik","useFormik","initialValues","username","dob","sex","nationality","phone_number","adress","city","state_province","country","zip_code","validateOnBlur","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","requestCreateMeta","axios","post","headers","withCredentials","credentials","then","response","status","studentMeta","data","receiveCreateMeta","push","createMetaError","catch","err","message","errors","msg","validationSchema","createMetaSchema","ref","GeneralErrorMessage","method","handleSubmit","htmlFor","type","id","name","value","onChange","handleChange","ErrorMessage","label","ButtonPrimary","textLabel","StudentDashboardUpdateInfo","sectionData","enableReinitialize","requestUpdateMeta","patch","uuid","receiveUpdateMeta","updateMetaError","onClick","requestDeleteMeta","delete","receiveDeleteMeta","deleteMetaError","bannerData","isLink","subtitle","StudentDashboardInfromation","userMetaState","userMetaSelector","currentInfo","setCurrentInfo","isLoading","setIsLoading","useEffect","requestGetMeta","get","receiveGetMeta","getMetaError","InitialTransition","Header","AuthBanner","isMetaCreated","StatsSection","Footer"],"mappings":"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","file":"static/js/26.524cfa56.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createMetaSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestCreateMeta, receiveCreateMeta, createMetaError } from '../../../redux/userMetaSlice';\r\nimport { userSelector } from '../../../redux/userSlice';\r\nimport './StudentDashboardCreateInfo.scss';\r\n\r\nfunction StudentDashboardCreateInfo() {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    const history = useHistory();\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestCreateMeta());\r\n\r\n        ///api/v1/users/student-meta\r\n\r\n        axios.post(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/student-meta`,  values, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                const { studentMeta } = response.data;\r\n                resetForm();\r\n                setFormError('');\r\n                dispatch(receiveCreateMeta(studentMeta));\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n            } else {\r\n                dispatch(createMetaError('There is an error with creating your information, please try again'));\r\n                setFormError('There is an error with creating your information, please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            dispatch(createMetaError(message));\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            dob: '',\r\n            sex: '',\r\n            nationality: '',\r\n            phone_number: '',\r\n            adress: '',\r\n            city: '',\r\n            state_province: '',\r\n            country: '',\r\n            zip_code: '',\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: createMetaSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"dashboard-info-create\">\r\n            <div className=\"dashboard-info-create-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-info-create-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\" className=\"form-group-label label\">Numele de utilizator.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"username\"\r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            {formik.errors.username && <ErrorMessageEl>{formik.errors.username}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dob\" className=\"form-group-label label\">Data nasterii.*</label>\r\n                                <input \r\n                                    type=\"date\" \r\n                                    id=\"dob\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"dob\"\r\n                                    value={formik.values.dob}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.dob && <ErrorMessageEl>{formik.errors.dob}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sex\" className=\"form-group-label label\">Genul.*</label>\r\n                                <select \r\n                                    id=\"sex\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"sex\"\r\n                                    value={formik.values.sex}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                </select>\r\n                                {formik.errors.sex && <ErrorMessageEl>{formik.errors.sex}</ErrorMessageEl>}       \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city\" className=\"form-group-label label\">Orasul.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"city\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"city\"\r\n                                    value={formik.values.city}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.city && <ErrorMessageEl>{formik.errors.city}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"state_province\" className=\"form-group-label label\">Statul sau provincia.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"state_province\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"state_province\"\r\n                                    value={formik.values.state_province}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.state_province && <ErrorMessageEl>{formik.errors.state_province}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country\" className=\"form-group-label label\">Tara.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"country\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"country\"\r\n                                    value={formik.values.country}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.country && <ErrorMessageEl>{formik.errors.country}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"zip_code\" className=\"form-group-label label\">Codul ZIP.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"zip_code\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"zip_code\"\r\n                                    value={formik.values.zip_code}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.zip_code && <ErrorMessageEl>{formik.errors.zip_code}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Creaza informatiile\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardCreateInfo;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createMetaSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  \r\n    requestDeleteMeta, \r\n    receiveDeleteMeta, \r\n    deleteMetaError, \r\n    requestUpdateMeta,\r\n    receiveUpdateMeta,\r\n    updateMetaError, \r\n} from '../../../redux/userMetaSlice';\r\nimport { userSelector } from '../../../redux/userSlice'; \r\nimport './StudentDashboardUpdateInfo.scss';\r\n\r\nfunction StudentDashboardUpdateInfo({ sectionData }) {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const history = useHistory();\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    // SUBMIT UPDATED INFORMATIONS\r\n    const onSubmit = (values) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },\r\n        }\r\n\r\n        dispatch(requestUpdateMeta());\r\n\r\n        ///api/v1/users/student-meta/${sectionData.uuid}\r\n\r\n        axios.patch(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/student-meta/${sectionData.uuid}`, values, reqConfig).then((response) => {\r\n            const { studentMeta } = response.data;\r\n            setFormError('');\r\n            dispatch(receiveUpdateMeta(studentMeta));\r\n            history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            dispatch(updateMetaError(message));\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // HANDLE DELETE INFORMATIONS\r\n    const handleDeleteInfo = () => {\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestDeleteMeta());\r\n\r\n        ///api/v1/users/student-meta/${sectionData.uuid}\r\n\r\n        axios.delete(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/student-meta/${sectionData.uuid}`, reqConfig).then((response) => {\r\n            if(response.status === 204) {\r\n                dispatch(receiveDeleteMeta());\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n            } else {\r\n                dispatch(deleteMetaError('There is an error, your information can not be deleted. Please try again'));\r\n                setFormError('There is an error, your information can not be deleted. Please try again');\r\n            }\r\n        }).catch(err => {\r\n            dispatch(deleteMetaError('There is an error, your information can not be deleted. Please try again'));\r\n            setFormError('There is an error, please try again');\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: sectionData ? sectionData.username : '',\r\n            dob: sectionData ? sectionData.dob : '',\r\n            sex: sectionData ? sectionData.sex : '',\r\n            nationality: sectionData ? sectionData.nationality : '',\r\n            phone_number: sectionData ? sectionData.phone_number : '',\r\n            adress: sectionData ? sectionData.adress : '',\r\n            city: sectionData ? sectionData.city : '',\r\n            state_province: sectionData ? sectionData.state_province : '',\r\n            country: sectionData ? sectionData.country : '',\r\n            zip_code: sectionData ? sectionData.zip_code : '',\r\n        },\r\n        validateOnBlur: true,\r\n        enableReinitialize: true,\r\n        onSubmit,\r\n        validationSchema: createMetaSchema\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"dashboard-info-update\">\r\n            <div className=\"dashboard-info-update-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Actualizeaza-ti informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-info-update-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\" className=\"form-group-label label\">Numele de utilizator.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"username\"\r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            {formik.errors.username && <ErrorMessageEl>{formik.errors.username}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dob\" className=\"form-group-label label\">Data nasterii.*</label>\r\n                                <input \r\n                                    type=\"date\" \r\n                                    id=\"dob\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"dob\"\r\n                                    value={formik.values.dob}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.dob && <ErrorMessageEl>{formik.errors.dob}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sex\" className=\"form-group-label label\">Genul.*</label>\r\n                                <select \r\n                                    id=\"sex\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"sex\"\r\n                                    value={formik.values.sex}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                </select>\r\n                                {formik.errors.sex && <ErrorMessageEl>{formik.errors.sex}</ErrorMessageEl>}       \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city\" className=\"form-group-label label\">Orasul.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"city\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"city\"\r\n                                    value={formik.values.city}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.city && <ErrorMessageEl>{formik.errors.city}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"state_province\" className=\"form-group-label label\">Statul sau provincia.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"state_province\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"state_province\"\r\n                                    value={formik.values.state_province}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.state_province && <ErrorMessageEl>{formik.errors.state_province}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country\" className=\"form-group-label label\">Tara.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"country\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"country\"\r\n                                    value={formik.values.country}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.country && <ErrorMessageEl>{formik.errors.country}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"zip_code\" className=\"form-group-label label\">Codul ZIP.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"zip_code\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"zip_code\"\r\n                                    value={formik.values.zip_code}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.zip_code && <ErrorMessageEl>{formik.errors.zip_code}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Actualizeaza-ti informatiile\" />\r\n                        <ButtonPrimary type=\"button\" onClick={handleDeleteInfo} textLabel=\"Sterge informatiile\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardUpdateInfo;\r\n","import React, { useState, useEffect } from 'react'\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardCreateInfo from '../components/StudentDashboard/StudentDashboardCreateInfo/StudentDashboardCreateInfo';\r\nimport StudentDashboardUpdateInfo from '../components/StudentDashboard/StudentDashboardUpdateInfo/StudentDashboardUpdateInfo';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\nimport axios from 'axios';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestGetMeta, receiveGetMeta, getMetaError, userMetaSelector } from '../redux/userMetaSlice';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Informatii generale\"\r\n}\r\n\r\nfunction StudentDashboardInfromation() {\r\n\r\n    // SLICE OF STATE\r\n    const userMetaState = useSelector(userMetaSelector);\r\n    const dispatch = useDispatch();\r\n    // STATE\r\n    const [ currentInfo, setCurrentInfo ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    // GET CURRENT INFORMATIONS ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchCurrentInfo = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n            \r\n            dispatch(requestGetMeta());\r\n\r\n            ///api/v1/users/student-meta\r\n\r\n            axios.get(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/student-meta`, reqConfig).then((response) => {\r\n                const { studentMeta } = response.data;\r\n                dispatch(receiveGetMeta(studentMeta));\r\n                setCurrentInfo(studentMeta);\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                dispatch(getMetaError('There is an error with your informations'));\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n\r\n        fetchCurrentInfo();\r\n    }, [dispatch]);\r\n\r\n    if(isLoading) {\r\n        return <InitialTransition />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                {\r\n                    userMetaState.isMetaCreated ? <StudentDashboardUpdateInfo sectionData={currentInfo}/> : <StudentDashboardCreateInfo />\r\n                }\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardInfromation;\r\n\r\n"],"sourceRoot":""}