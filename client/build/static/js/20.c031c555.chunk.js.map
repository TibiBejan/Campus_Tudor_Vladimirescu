{"version":3,"sources":["components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/SharedComponents/KinCard/KinCard.js","components/SharedComponents/AddCard/AddCard.js","components/StudentDashboard/StudentDashboardKins/StudentDashboardKins.js","pages/StudentDashboardKin.js"],"names":["StudentDashboardNav","userState","useSelector","userSelector","className","to","user","first_name","last_name","activeClassName","trackWindowScroll","cardData","scrollPosition","uuid","alt","src","kinIllustration","effect","height","relation","phone_number","type","textLabel","handleClick","onClick","SwiperCore","use","Navigation","EffectFade","StudentDashboardKins","dispatch","useDispatch","userMetaState","userMetaSelector","useState","formError","setFormError","setSlidesLength","setActiveIndex","prevButton","nextButton","disabled","setDisabled","sliderPrevButton","useRef","sliderNextButton","inputFocus","blockRef","useEffect","requestKins","axios","get","headers","withCredentials","credentials","then","response","status","kins","data","receiveKins","catch","err","kinsError","formik","useFormik","initialValues","email","adress","validateOnBlur","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","post","console","log","location","reload","message","errors","msg","validationSchema","createKinSchema","slidesPerView","navigation","prevEl","nextEl","breakpoints","1500","1366","1150","767","650","spaceBetween","grabCursor","resistance","resistanceRatio","speed","onInit","userKins","length","onSlideChange","Swiper","activeIndex","focus","map","kin","index","ref","Provider","value","color","size","GeneralErrorMessage","method","handleSubmit","htmlFor","id","name","onChange","handleChange","ErrorMessage","ButtonPrimary","bannerData","isLink","subtitle","StudentDashboardKin","InitialTransition","Header","AuthBanner","sectionData","StatsSection","Footer"],"mappings":"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","file":"static/js/20.c031c555.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../Button/ButtonPrimary';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\nimport kinIllustration from '../../../assets/images/kin-illustration.svg';\r\nimport { LazyLoadImage, trackWindowScroll  } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport './KinCard.scss';\r\n\r\nfunction KinCard({ cardData, scrollPosition }) {\r\n\r\n    // SLICE OF STATE\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <Link to={`/${userState.user.first_name}.${userState.user.last_name}/kins/${cardData.uuid}`} className=\"kin-card-link-wrapper\">\r\n            <div className=\"kin-card\">\r\n                <div className=\"kin-card-showcase\">\r\n                    <div className=\"card-showcase-profile-image\">\r\n                        {/* <img src={kinIllustration} alt=\"Ilustratia persoanei de contact a studentului\" className=\"background-image\" /> */}\r\n                    \r\n                        <LazyLoadImage\r\n                            alt=\"Ilustratia persoanei de contact a studentului\"\r\n                            src={kinIllustration}\r\n                            effect=\"blur\"\r\n                            scrollPosition={scrollPosition}\r\n                            className=\"background-image\"\r\n                            height={\"100%\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"kin-card-content\">\r\n                    <span className=\"content-label label\">{cardData.relation}</span>\r\n                    <p className=\"content-title label\">Nume: {`${cardData.first_name} ${cardData.last_name}`}</p>\r\n                    <p className=\"content-title label\">Telefon: {cardData.phone_number}</p>\r\n                    <Button type=\"button\" textLabel=\"Actualizare\" />\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default trackWindowScroll(KinCard);\r\n","import React from 'react';\r\nimport Button from '../Button/ButtonPrimary';\r\nimport kinIllustration from '../../../assets/images/kin-illustration.svg';\r\nimport { LazyLoadImage, trackWindowScroll  } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport './AddCard.scss';\r\n\r\nfunction AddCard({ handleClick, scrollPosition }) {\r\n\r\n    return (\r\n        <div className=\"add-card\" onClick={ handleClick }>\r\n            <div className=\"add-card-content\">\r\n                <div className=\"card-showcase-profile-image\">\r\n                     <LazyLoadImage\r\n                        alt=\"Ilustratia persoanei de contact a studentului\"\r\n                        src={kinIllustration}\r\n                        effect=\"blur\"\r\n                        scrollPosition={scrollPosition}\r\n                        className=\"background-image\"\r\n                        height={\"100%\"}\r\n                    />\r\n                    {/* <img src={kinIllustration} alt=\"Ilustratia persoanei de contact a studentului\" className=\"background-image\" /> */}\r\n                </div>\r\n                <Button type=\"button\" textLabel=\"Adauga contact\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default trackWindowScroll(AddCard);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsArrowLeft, BsArrowRight } from \"react-icons/bs\";\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport KinCard from '../../SharedComponents/KinCard/KinCard';\r\nimport AddCard from '../../SharedComponents/AddCard/AddCard';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createKinSchema } from '../../../validation/UserSchema';\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestKins, receiveKins, kinsError, userMetaSelector } from '../../../redux/userMetaSlice';\r\nimport './StudentDashboardKins.scss';\r\n\r\n// SWIPER SLIDER\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, EffectFade  } from 'swiper';\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport 'swiper/components/effect-fade/effect-fade.scss';\r\n// INSTAL MODULES\r\nSwiperCore.use([Navigation, EffectFade]);\r\n\r\nfunction StudentDashboardKins() {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userMetaState = useSelector(userMetaSelector);\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const [ slidesLength, setSlidesLength ] = useState(null);\r\n    const [ activeIndex, setActiveIndex ] = useState(1);\r\n    const [ disabled, setDisabled ] = useState({\r\n        prevButton: false,\r\n        nextButton: false\r\n    });\r\n\r\n    // REF\r\n    const sliderPrevButton = useRef(null);\r\n    const sliderNextButton = useRef(null);\r\n    const inputFocus = useRef(null);\r\n    const blockRef = useRef(null)\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        axios.post(`/api/v1/users/kins`,  values, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                console.log('Kin created!')\r\n                resetForm();\r\n                setFormError('');\r\n                window.location.reload();\r\n            } else {\r\n                setFormError('There is an error, please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchKins = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n            // INIT REQ\r\n            dispatch(requestKins());\r\n    \r\n            axios.get(`/api/v1/users/kins`, reqConfig).then((response) => {\r\n                if(response.status === 200 || response.status === 201) {\r\n                    const { kins } = response.data;\r\n                    dispatch(receiveKins(kins));\r\n                } else {\r\n                    setFormError('Pentru a continua procesul de inrolarea, va rugam sa introduceti cel putin o persoana de contact');\r\n                }\r\n            }).catch(err => {\r\n                dispatch(kinsError('Pentru a continua procesul de inrolarea, va rugam sa introduceti cel putin o persoana de contact'));\r\n                setFormError('Pentru a continua procesul de inrolarea, va rugam sa introduceti cel putin o persoana de contact');\r\n            });\r\n        }\r\n\r\n        fetchKins();\r\n    }, [dispatch]);\r\n\r\n    const handleCreateKin = () => {\r\n        inputFocus.current.focus();\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            relation: '',\r\n            adress: '',\r\n            phone_number: ''\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: createKinSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"dashboard-kins\">\r\n            <div className=\"dashboard-kins-inner\">\r\n                <StudentDashboardNav />\r\n\r\n                <Swiper \r\n                    slidesPerView={1}\r\n                    navigation={{\r\n                        prevEl: sliderPrevButton.current,\r\n                        nextEl: sliderNextButton.current,\r\n                    }}\r\n                    breakpoints={{\r\n                        1500: {slidesPerView: 3},\r\n                        1366: {slidesPerView: 2.5},\r\n                        1150: {slidesPerView: 2},\r\n                        767: {slidesPerView: 1.5},\r\n                        650: {slidesPerView: 1}\r\n                    }}\r\n                    spaceBetween={40}\r\n                    grabCursor={true}\r\n                    resistance={true}\r\n                    resistanceRatio={0.5}\r\n                    speed={1000}\r\n                    onInit={() => {\r\n                        setSlidesLength(userMetaState.userKins.length);\r\n                        setActiveIndex(1);\r\n                    }}\r\n                    onSlideChange={(Swiper) => {\r\n                        setActiveIndex(Swiper.activeIndex + 1);\r\n                        if(Swiper.activeIndex === 0) {\r\n                            setDisabled({\r\n                                prevButton: true,\r\n                                nextButton: false\r\n                            });\r\n                        } else if(Swiper.activeIndex >= userMetaState.userKins.length -1) {\r\n                            setDisabled({\r\n                                prevButton: false,\r\n                                nextButton: true\r\n                            });\r\n                        } else {\r\n                            setDisabled({\r\n                                prevButton: false,\r\n                                nextButton: false\r\n                            });\r\n                        }\r\n                    }}\r\n                    className=\"student-kins-slider\"\r\n                >\r\n                    <SwiperSlide>\r\n                        <AddCard handleClick={handleCreateKin}/>\r\n                    </SwiperSlide>\r\n                    {userMetaState.userKins.map((kin, index) => (\r\n                        <SwiperSlide key={`kin-${index}`}>\r\n                            <KinCard cardData={kin} />\r\n                        </SwiperSlide>\r\n                    ))}\r\n\r\n                    <button disabled={disabled.prevButton} className=\"showcase-prev-button\" ref={sliderPrevButton}>\r\n                        <IconContext.Provider value={{color: '#fafafa', size: '34px'}}>\r\n                            <BsArrowLeft />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                    <button disabled={disabled.nextButton} className=\"showcase-next-button\" ref={sliderNextButton}>\r\n                        <IconContext.Provider value={{color: '#fafafa', size: '34px'}}>\r\n                            <BsArrowRight />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                </Swiper>\r\n\r\n                <div className=\"dashboard-form-block\">\r\n                    <div className=\"dashboard-form-block-heading-wrapper\" ref={blockRef}>\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga o persoana de contact</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-kins-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\" className=\"form-group-label label\">Prenumele persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"firstName\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"first_name\"\r\n                                    value={formik.values.first_name}\r\n                                    onChange={formik.handleChange}\r\n                                    ref={inputFocus}\r\n                                />\r\n                            {formik.errors.first_name && <ErrorMessageEl>{formik.errors.first_name}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\" className=\"form-group-label label\">Numele persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"lastName\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"last_name\"\r\n                                    value={formik.values.last_name}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.last_name && <ErrorMessageEl>{formik.errors.last_name}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\" className=\"form-group-label label\">Email-ul persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id=\"email\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"email\"\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.email && <ErrorMessageEl>{formik.errors.email}</ErrorMessageEl>}       \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"relation\" className=\"form-group-label label\">Tipul relatiei.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"relation\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"relation\"\r\n                                    value={formik.values.relation}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.relation && <ErrorMessageEl>{formik.errors.relation}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa persoanei de contact.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Adauga pesoana de contact\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardKins;\r\n","import React from 'react'\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardKins from '../components/StudentDashboard/StudentDashboardKins/StudentDashboardKins';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Persoane de contact\"\r\n}\r\n\r\nfunction StudentDashboardKin() {\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                <StudentDashboardKins />\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardKin\r\n"],"sourceRoot":""}