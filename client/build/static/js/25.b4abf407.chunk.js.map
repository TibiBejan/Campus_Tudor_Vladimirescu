{"version":3,"sources":["components/SharedComponents/AuthBanner/AuthBanner.js","components/SharedComponents/GeneralErrorMessage/GeneralErrorMessage.js","validation/UserSchema.js","components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/StudentDashboard/StudentDashboardCreateInfo/StudentDashboardCreateInfo.js","components/StudentDashboard/StudentDashboardUpdateInfo/StudentDashboardUpdateInfo.js","pages/StudentDashboardInfromation.js","components/SharedComponents/Button/ButtonPrimary.js","components/SharedComponents/FormErrorMessage/ErrorMessage.js"],"names":["AuthBanner","sectionData","title","className","subtitle","isLink","to","path","pathLabel","GeneralErrorMessage","children","success","PASSWORD_REGEX","phoneRegExp","updatePwdSchema","yup","password_confirm","required","matches","password_new","password_new_confirm","when","is","val","length","then","oneOf","updateAccountDetailsSchema","first_name","min","last_name","email","createKinSchema","relation","adress","phone_number","createMetaSchema","username","dob","sex","nationality","city","state_province","country","zip_code","enrollSchema","university","type_of_study","year_of_study","grade","financial_type","student_gender","StudentDashboardNav","userState","useSelector","userSelector","user","activeClassName","StudentDashboardCreateInfo","dispatch","useDispatch","history","useHistory","useState","formError","setFormError","blockRef","useRef","formik","useFormik","initialValues","validateOnBlur","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","requestCreateMeta","axios","post","headers","withCredentials","credentials","response","status","studentMeta","data","receiveCreateMeta","push","createMetaError","catch","err","message","errors","msg","validationSchema","ref","method","handleSubmit","htmlFor","type","id","name","value","onChange","handleChange","ErrorMessage","label","ButtonPrimary","textLabel","StudentDashboardUpdateInfo","enableReinitialize","requestUpdateMeta","patch","uuid","receiveUpdateMeta","updateMetaError","onClick","requestDeleteMeta","delete","receiveDeleteMeta","deleteMetaError","bannerData","StudentDashboardInfromation","userMetaState","userMetaSelector","currentInfo","setCurrentInfo","isLoading","setIsLoading","useEffect","requestGetMeta","get","receiveGetMeta","getMetaError","InitialTransition","Header","isMetaCreated","StatsSection","Footer","Button","disabled","Provider","color","size","ErrorMessageWrapper","styled","div","MessageLabel","p","ErrorMessageEl"],"mappings":"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","file":"static/js/25.b4abf407.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './AuthBanner.scss';\r\n\r\nfunction AuthBanner({ sectionData, title }) {\r\n    return (\r\n        <section className=\"auth-banner\">\r\n            <div className=\"auth-banner-content\">\r\n                <div className=\"content-heading-wrapper\">\r\n                    <h1 className=\"content-heading-title heading-one\">{title ? title : 'Portalul utilizatorului'}</h1>\r\n                </div>\r\n                <div className=\"content-subtitle-wrapper\">\r\n                    <h3 className=\"content-subtitle heading-three\">{sectionData.subtitle}</h3>\r\n                    {sectionData.isLink && \r\n                        <Link to={sectionData.path} className=\"content-link-wrapper\">\r\n                            <span className=\"content-link-label label-large\">{sectionData.pathLabel}</span>\r\n                        </Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AuthBanner;","import React from 'react';\r\nimport './GeneralErrorMessage.scss';\r\n\r\nfunction GeneralErrorMessage({ children, success }) {\r\n    return (\r\n        <div className=\"general-error\">\r\n            <div className=\"general-error-inner\">\r\n                <span className=\"link-label\">{success ? 'Success:' : 'Error:'}<span className=\"label\">{children}</span></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralErrorMessage;\r\n","// FORM LIBRARY\r\nimport * as yup from 'yup';\r\n\r\n// PWD REGET EXPRESSION\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n// UPDATE PASSWORD SCHEMA\r\nexport const updatePwdSchema = yup.object({\r\n    password_confirm: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_new: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_new_confirm: yup.string().required(\"You must enter a password confirm\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password_new\")], \"Your confirm password does not match, please try again\")\r\n    })\r\n});\r\n\r\n// REGISTER SCHEMA\r\nexport const updateAccountDetailsSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter your first name\").min(3, \"Your first name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter your last name\").min(3, \"Your last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter your e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n}); \r\n\r\n// KIN SCHEMA\r\nexport const createKinSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter your kin's first name\").min(3, \"Your kin first name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter your kin's last name\").min(3, \"Your kin last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter your kin's e-mail adress\").email(\"Please enter a valid e-mail adress of your kin\"),\r\n    relation: yup.string().required(\"You must enter your kin relation\").min(3, \"Your relation should contain al least 3 characters\"),\r\n    adress: yup.string().required(\"You must enter your kin' adress\"),\r\n    phone_number: yup.string().required(\"You must enter your kin' phone number\").matches(phoneRegExp, \"Your kin's phone number is not valid\")\r\n}); \r\n\r\n// STUDENT META SCHEMA\r\nexport const createMetaSchema = yup.object({\r\n    username: yup.string().required(\"You must enter your username\").min(3, \"Your username should contain al least 3 characters\"),\r\n    dob: yup.date().required(\"You must enter your date of birth\"),\r\n    sex: yup.string().required(\"You must select your gender\"),\r\n    nationality: yup.string().required(\"You must enter your nationality\"),\r\n    phone_number: yup.string().required(\"You must enter your phone number\").matches(phoneRegExp, \"Your kin's phone number is not valid\"),\r\n    adress: yup.string().required(\"You must enter your adress\"),\r\n    city: yup.string().required(\"You must enter your city\"),\r\n    state_province: yup.string().required(\"You must enter your state or province\"),\r\n    country: yup.string().required(\"You must enter your country\"),\r\n    zip_code: yup.string().required(\"You must enter your zip_code\"),\r\n}); \r\n\r\n// STUDENT ENROLLMENT SCHEMA\r\nexport const enrollSchema = yup.object({\r\n    university: yup.string().required(\"You must select your university\"),\r\n    type_of_study: yup.string().required(\"You must select your type of study\"),\r\n    year_of_study: yup.number().required(\"You must select your year of study\"),\r\n    grade: yup.number().required(\"You must enter your previous year grade\"),\r\n    financial_type: yup.string().required(\"You must enter your financial type\"),\r\n    nationality: yup.string().required(\"You must enter your nationality\"),\r\n    student_gender: yup.string().required(\"You must enter select your gender\")\r\n}); \r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createMetaSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestCreateMeta, receiveCreateMeta, createMetaError } from '../../../redux/userMetaSlice';\r\nimport { userSelector } from '../../../redux/userSlice';\r\nimport './StudentDashboardCreateInfo.scss';\r\n\r\nfunction StudentDashboardCreateInfo() {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    const history = useHistory();\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestCreateMeta());\r\n\r\n        ///api/v1/users/student-meta\r\n\r\n        axios.post(`/api/v1/users/student-meta`,  values, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                const { studentMeta } = response.data;\r\n                resetForm();\r\n                setFormError('');\r\n                dispatch(receiveCreateMeta(studentMeta));\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n            } else {\r\n                dispatch(createMetaError('There is an error with creating your information, please try again'));\r\n                setFormError('There is an error with creating your information, please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            dispatch(createMetaError(message));\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            dob: '',\r\n            sex: '',\r\n            nationality: '',\r\n            phone_number: '',\r\n            adress: '',\r\n            city: '',\r\n            state_province: '',\r\n            country: '',\r\n            zip_code: '',\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: createMetaSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"dashboard-info-create\">\r\n            <div className=\"dashboard-info-create-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-info-create-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\" className=\"form-group-label label\">Numele de utilizator.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"username\"\r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            {formik.errors.username && <ErrorMessageEl>{formik.errors.username}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dob\" className=\"form-group-label label\">Data nasterii.*</label>\r\n                                <input \r\n                                    type=\"date\" \r\n                                    id=\"dob\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"dob\"\r\n                                    value={formik.values.dob}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.dob && <ErrorMessageEl>{formik.errors.dob}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sex\" className=\"form-group-label label\">Genul.*</label>\r\n                                <select \r\n                                    id=\"sex\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"sex\"\r\n                                    value={formik.values.sex}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                </select>\r\n                                {formik.errors.sex && <ErrorMessageEl>{formik.errors.sex}</ErrorMessageEl>}       \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city\" className=\"form-group-label label\">Orasul.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"city\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"city\"\r\n                                    value={formik.values.city}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.city && <ErrorMessageEl>{formik.errors.city}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"state_province\" className=\"form-group-label label\">Statul sau provincia.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"state_province\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"state_province\"\r\n                                    value={formik.values.state_province}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.state_province && <ErrorMessageEl>{formik.errors.state_province}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country\" className=\"form-group-label label\">Tara.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"country\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"country\"\r\n                                    value={formik.values.country}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.country && <ErrorMessageEl>{formik.errors.country}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"zip_code\" className=\"form-group-label label\">Codul ZIP.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"zip_code\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"zip_code\"\r\n                                    value={formik.values.zip_code}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.zip_code && <ErrorMessageEl>{formik.errors.zip_code}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Creaza informatiile\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardCreateInfo;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { createMetaSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  \r\n    requestDeleteMeta, \r\n    receiveDeleteMeta, \r\n    deleteMetaError, \r\n    requestUpdateMeta,\r\n    receiveUpdateMeta,\r\n    updateMetaError, \r\n} from '../../../redux/userMetaSlice';\r\nimport { userSelector } from '../../../redux/userSlice'; \r\nimport './StudentDashboardUpdateInfo.scss';\r\n\r\nfunction StudentDashboardUpdateInfo({ sectionData }) {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const history = useHistory();\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    // SUBMIT UPDATED INFORMATIONS\r\n    const onSubmit = (values) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            },\r\n        }\r\n\r\n        dispatch(requestUpdateMeta());\r\n\r\n        axios.patch(`/api/v1/users/student-meta/${sectionData.uuid}`, values, reqConfig).then((response) => {\r\n            const { studentMeta } = response.data;\r\n            setFormError('');\r\n            dispatch(receiveUpdateMeta(studentMeta));\r\n            history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            dispatch(updateMetaError(message));\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // HANDLE DELETE INFORMATIONS\r\n    const handleDeleteInfo = () => {\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestDeleteMeta());\r\n\r\n        axios.delete(`/api/v1/users/student-meta/${sectionData.uuid}`, reqConfig).then((response) => {\r\n            if(response.status === 204) {\r\n                dispatch(receiveDeleteMeta());\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/dashboard`);\r\n            } else {\r\n                dispatch(deleteMetaError('There is an error, your information can not be deleted. Please try again'));\r\n                setFormError('There is an error, your information can not be deleted. Please try again');\r\n            }\r\n        }).catch(err => {\r\n            dispatch(deleteMetaError('There is an error, your information can not be deleted. Please try again'));\r\n            setFormError('There is an error, please try again');\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: sectionData ? sectionData.username : '',\r\n            dob: sectionData ? sectionData.dob : '',\r\n            sex: sectionData ? sectionData.sex : '',\r\n            nationality: sectionData ? sectionData.nationality : '',\r\n            phone_number: sectionData ? sectionData.phone_number : '',\r\n            adress: sectionData ? sectionData.adress : '',\r\n            city: sectionData ? sectionData.city : '',\r\n            state_province: sectionData ? sectionData.state_province : '',\r\n            country: sectionData ? sectionData.country : '',\r\n            zip_code: sectionData ? sectionData.zip_code : '',\r\n        },\r\n        validateOnBlur: true,\r\n        enableReinitialize: true,\r\n        onSubmit,\r\n        validationSchema: createMetaSchema\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"dashboard-info-update\">\r\n            <div className=\"dashboard-info-update-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Actualizeaza-ti informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-info-update-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\" className=\"form-group-label label\">Numele de utilizator.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"username\"\r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            {formik.errors.username && <ErrorMessageEl>{formik.errors.username}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dob\" className=\"form-group-label label\">Data nasterii.*</label>\r\n                                <input \r\n                                    type=\"date\" \r\n                                    id=\"dob\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"dob\"\r\n                                    value={formik.values.dob}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.dob && <ErrorMessageEl>{formik.errors.dob}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sex\" className=\"form-group-label label\">Genul.*</label>\r\n                                <select \r\n                                    id=\"sex\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"sex\"\r\n                                    value={formik.values.sex}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                </select>\r\n                                {formik.errors.sex && <ErrorMessageEl>{formik.errors.sex}</ErrorMessageEl>}       \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_number\" className=\"form-group-label label\">Numarul de telefon.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"phone_number\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"phone_number\"\r\n                                    value={formik.values.phone_number}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.phone_number && <ErrorMessageEl>{formik.errors.phone_number}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"adress\" className=\"form-group-label label\">Adresa.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"adress\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"adress\"\r\n                                    value={formik.values.adress}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.adress && <ErrorMessageEl>{formik.errors.adress}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city\" className=\"form-group-label label\">Orasul.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"city\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"city\"\r\n                                    value={formik.values.city}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.city && <ErrorMessageEl>{formik.errors.city}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"state_province\" className=\"form-group-label label\">Statul sau provincia.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"state_province\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"state_province\"\r\n                                    value={formik.values.state_province}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.state_province && <ErrorMessageEl>{formik.errors.state_province}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country\" className=\"form-group-label label\">Tara.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"country\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"country\"\r\n                                    value={formik.values.country}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.country && <ErrorMessageEl>{formik.errors.country}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"zip_code\" className=\"form-group-label label\">Codul ZIP.*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"zip_code\" \r\n                                    className=\"form-group-input\" \r\n                                    name=\"zip_code\"\r\n                                    value={formik.values.zip_code}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.zip_code && <ErrorMessageEl>{formik.errors.zip_code}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Actualizeaza-ti informatiile\" />\r\n                        <ButtonPrimary type=\"button\" onClick={handleDeleteInfo} textLabel=\"Sterge informatiile\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardUpdateInfo;\r\n","import React, { useState, useEffect } from 'react'\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardCreateInfo from '../components/StudentDashboard/StudentDashboardCreateInfo/StudentDashboardCreateInfo';\r\nimport StudentDashboardUpdateInfo from '../components/StudentDashboard/StudentDashboardUpdateInfo/StudentDashboardUpdateInfo';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\nimport axios from 'axios';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestGetMeta, receiveGetMeta, getMetaError, userMetaSelector } from '../redux/userMetaSlice';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Informatii generale\"\r\n}\r\n\r\nfunction StudentDashboardInfromation() {\r\n\r\n    // SLICE OF STATE\r\n    const userMetaState = useSelector(userMetaSelector);\r\n    const dispatch = useDispatch();\r\n    // STATE\r\n    const [ currentInfo, setCurrentInfo ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    // GET CURRENT INFORMATIONS ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchCurrentInfo = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n            \r\n            dispatch(requestGetMeta());\r\n\r\n            ///api/v1/users/student-meta\r\n\r\n            axios.get(`/api/v1/users/student-meta`, reqConfig).then((response) => {\r\n                const { studentMeta } = response.data;\r\n                dispatch(receiveGetMeta(studentMeta));\r\n                setCurrentInfo(studentMeta);\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                dispatch(getMetaError('There is an error with your informations'));\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n\r\n        fetchCurrentInfo();\r\n    }, [dispatch]);\r\n\r\n    if(isLoading) {\r\n        return <InitialTransition />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                {\r\n                    userMetaState.isMetaCreated ? <StudentDashboardUpdateInfo sectionData={currentInfo}/> : <StudentDashboardCreateInfo />\r\n                }\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardInfromation;\r\n\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport './ButtonPrimary.scss';\r\n\r\nfunction Button({ type, disabled, onClick, textLabel }) {\r\n    return (\r\n        <button type={type} disabled={disabled} onClick={onClick} className=\"button-primary\">\r\n            <span className=\"button-primary-label label\">{textLabel}</span>\r\n            <IconContext.Provider value={{color: '#fafafa', size: '30px'}}>\r\n                <BsArrowRight />\r\n            </IconContext.Provider>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorMessageWrapper = styled.div`\r\n    width: 100%;\r\n    padding: 2.5rem 0;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    text-align: start;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nconst MessageLabel = styled.p`\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n    letter-spacing: 0.1rem;\r\n    color: #a50000;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nfunction ErrorMessageEl ({ children }) {\r\n    return (\r\n        <ErrorMessageWrapper>\r\n            <MessageLabel>{children}</MessageLabel>\r\n        </ErrorMessageWrapper>\r\n    )\r\n}\r\n\r\nexport default ErrorMessageEl;\r\n"],"sourceRoot":""}