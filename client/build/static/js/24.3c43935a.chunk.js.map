{"version":3,"sources":["components/SharedComponents/AuthBanner/AuthBanner.js","components/SharedComponents/GeneralErrorMessage/GeneralErrorMessage.js","validation/UserSchema.js","components/StudentDashboard/StudentDashboardNav/StudentDashboardNav.js","components/StudentDashboard/StudentDashboardCreateEnroll/StudentDashboardCreateEnroll.js","components/StudentDashboard/StudentDashboardUpdateEnroll/StudentDashboardUpdateEnroll.js","pages/StudentDashboardEnrollment.js","components/SharedComponents/Button/ButtonPrimary.js","components/SharedComponents/FormErrorMessage/ErrorMessage.js"],"names":["AuthBanner","sectionData","title","className","subtitle","isLink","to","path","pathLabel","GeneralErrorMessage","children","success","PASSWORD_REGEX","phoneRegExp","updatePwdSchema","yup","password_confirm","required","matches","password_new","password_new_confirm","when","is","val","length","then","oneOf","updateAccountDetailsSchema","first_name","min","last_name","email","createKinSchema","relation","adress","phone_number","createMetaSchema","username","dob","sex","nationality","city","state_province","country","zip_code","enrollSchema","university","type_of_study","year_of_study","grade","financial_type","student_gender","StudentDashboardNav","userState","useSelector","userSelector","user","activeClassName","StudentDashboardCreateEnroll","dispatch","useDispatch","history","useHistory","useState","formError","setFormError","typeOfStudy","setTypeOfStudy","blockRef","useRef","formik","useFormik","initialValues","validateOnBlur","onSubmit","values","resetForm","window","scrollTo","current","offsetTop","requestEnroll","axios","post","headers","withCredentials","credentials","response","enrollment","data","receiveEnroll","push","catch","err","message","errors","msg","enrollError","validationSchema","ref","method","handleSubmit","htmlFor","id","name","value","onChange","handleChange","label","ErrorMessage","onBlur","e","target","type","max","step","ButtonPrimary","textLabel","StudentDashboardUpdateEnroll","requestUpdateEnroll","patch","uuid","status","receiveUpdateEnroll","updateEnrollError","onClick","requestDeleteEnroll","delete","receiveDeleteEnroll","deleteEnrollError","bannerData","StudentDashboardEnrollment","userEnrollSlice","userEnrollSelector","currentEnroll","setCurrentEnroll","isLoading","setIsLoading","useEffect","get","InitialTransition","Header","isEnrolled","StatsSection","Footer","Button","disabled","Provider","color","size","ErrorMessageWrapper","styled","div","MessageLabel","p","ErrorMessageEl"],"mappings":"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","file":"static/js/24.3c43935a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './AuthBanner.scss';\r\n\r\nfunction AuthBanner({ sectionData, title }) {\r\n    return (\r\n        <section className=\"auth-banner\">\r\n            <div className=\"auth-banner-content\">\r\n                <div className=\"content-heading-wrapper\">\r\n                    <h1 className=\"content-heading-title heading-one\">{title ? title : 'Portalul utilizatorului'}</h1>\r\n                </div>\r\n                <div className=\"content-subtitle-wrapper\">\r\n                    <h3 className=\"content-subtitle heading-three\">{sectionData.subtitle}</h3>\r\n                    {sectionData.isLink && \r\n                        <Link to={sectionData.path} className=\"content-link-wrapper\">\r\n                            <span className=\"content-link-label label-large\">{sectionData.pathLabel}</span>\r\n                        </Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AuthBanner;","import React from 'react';\r\nimport './GeneralErrorMessage.scss';\r\n\r\nfunction GeneralErrorMessage({ children, success }) {\r\n    return (\r\n        <div className=\"general-error\">\r\n            <div className=\"general-error-inner\">\r\n                <span className=\"link-label\">{success ? 'Success:' : 'Error:'}<span className=\"label\">{children}</span></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralErrorMessage;\r\n","// FORM LIBRARY\r\nimport * as yup from 'yup';\r\n\r\n// PWD REGET EXPRESSION\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n// UPDATE PASSWORD SCHEMA\r\nexport const updatePwdSchema = yup.object({\r\n    password_confirm: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_new: yup.string().required(\"You must enter a password\").matches(PASSWORD_REGEX, \"Your password must contain: minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"),\r\n    password_new_confirm: yup.string().required(\"You must enter a password confirm\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password_new\")], \"Your confirm password does not match, please try again\")\r\n    })\r\n});\r\n\r\n// REGISTER SCHEMA\r\nexport const updateAccountDetailsSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter your first name\").min(3, \"Your first name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter your last name\").min(3, \"Your last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter your e-mail adress\").email(\"Please enter a valid e-mail adress\"),\r\n}); \r\n\r\n// KIN SCHEMA\r\nexport const createKinSchema = yup.object({\r\n    first_name: yup.string().required(\"You must enter your kin's first name\").min(3, \"Your kin first name should contain al least 3 characters\"),\r\n    last_name: yup.string().required(\"You must enter your kin's last name\").min(3, \"Your kin last name should contain al least 3 characters\"),\r\n    email: yup.string().required(\"You must enter your kin's e-mail adress\").email(\"Please enter a valid e-mail adress of your kin\"),\r\n    relation: yup.string().required(\"You must enter your kin relation\").min(3, \"Your relation should contain al least 3 characters\"),\r\n    adress: yup.string().required(\"You must enter your kin' adress\"),\r\n    phone_number: yup.string().required(\"You must enter your kin' phone number\").matches(phoneRegExp, \"Your kin's phone number is not valid\")\r\n}); \r\n\r\n// STUDENT META SCHEMA\r\nexport const createMetaSchema = yup.object({\r\n    username: yup.string().required(\"You must enter your username\").min(3, \"Your username should contain al least 3 characters\"),\r\n    dob: yup.date().required(\"You must enter your date of birth\"),\r\n    sex: yup.string().required(\"You must select your gender\"),\r\n    nationality: yup.string().required(\"You must enter your nationality\"),\r\n    phone_number: yup.string().required(\"You must enter your phone number\").matches(phoneRegExp, \"Your kin's phone number is not valid\"),\r\n    adress: yup.string().required(\"You must enter your adress\"),\r\n    city: yup.string().required(\"You must enter your city\"),\r\n    state_province: yup.string().required(\"You must enter your state or province\"),\r\n    country: yup.string().required(\"You must enter your country\"),\r\n    zip_code: yup.string().required(\"You must enter your zip_code\"),\r\n}); \r\n\r\n// STUDENT ENROLLMENT SCHEMA\r\nexport const enrollSchema = yup.object({\r\n    university: yup.string().required(\"You must select your university\"),\r\n    type_of_study: yup.string().required(\"You must select your type of study\"),\r\n    year_of_study: yup.number().required(\"You must select your year of study\"),\r\n    grade: yup.number().required(\"You must enter your previous year grade\"),\r\n    financial_type: yup.string().required(\"You must enter your financial type\"),\r\n    nationality: yup.string().required(\"You must enter your nationality\"),\r\n    student_gender: yup.string().required(\"You must enter select your gender\")\r\n}); \r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// REDUX\r\nimport { useSelector } from 'react-redux';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardNav.scss';\r\n\r\nfunction StudentDashboardNav() {\r\n\r\n    const userState = useSelector(userSelector);\r\n\r\n    return (\r\n        <ul className=\"dashboard-main-nav\">\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/dashboard`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Dashboard</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/enrollment`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Enrollment</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/information`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Information</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/kins`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Student Kins</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-details`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update account</span>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"dashboard-nav-list-item\">\r\n                <NavLink \r\n                    to={`/${userState.user.first_name}.${userState.user.last_name}/update-password`} \r\n                    activeClassName=\"selected\" \r\n                    className=\"dashboard-nav-link\"\r\n                >\r\n                    <span className=\"label-medium\">Update password</span>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardNav;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { enrollSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestEnroll, receiveEnroll, enrollError } from '../../../redux/userEnrollSlice';\r\nimport { userSelector } from '../../../redux/userSlice';\r\nimport './StudentDashboardCreateEnroll.scss';\r\n\r\nfunction StudentDashboardCreateEnroll() {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    const history = useHistory();\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const [ typeOfStudy, setTypeOfStudy ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    // HANDLE FIELD ON BLUR\r\n    const handleBlur = (e) => setTypeOfStudy(e.target.value);\r\n\r\n    // CREATE ENROLLMENT\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestEnroll());\r\n\r\n        ///api/v1/users/enrollment\r\n\r\n        axios.post(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/enrollment`,  values, reqConfig).then((response) => {\r\n            const { enrollment } = response.data;\r\n            dispatch(receiveEnroll(enrollment));\r\n            resetForm();\r\n            setFormError('');\r\n            history.push(`/${userState.user.first_name}.${userState.user.last_name}/enrollment/success`);\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            dispatch(enrollError(message));\r\n            setFormError(message);\r\n        });\r\n    };\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            university: '',\r\n            year_of_study: '',\r\n            type_of_study: '',\r\n            grade: '',\r\n            financial_type: '',\r\n            nationality: '',\r\n            student_gender: '',\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: enrollSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"dashboard-create-enroll\">\r\n            <div className=\"dashboard-create-enroll-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-create-enroll-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block full-width\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"university\" className=\"form-group-label label\">Universitatea dvs.*</label>\r\n                                <select \r\n                                    id=\"university\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"university\"\r\n                                    value={formik.values.university}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati universitatea\" />\r\n                                    <option value=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" label=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" />\r\n                                    <option value=\"Facultatea de Mecanică Iaşi\" label=\"Facultatea de Mecanică Iaşi\" />\r\n                                    <option value=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" label=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" />\r\n                                    <option value=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" label=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" />\r\n                                    <option value=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" label=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" />\r\n                                    <option value=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" label=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" />\r\n                                    <option value=\"Facultatea de Design Industrial și Managementul Afacerilor\" label=\"Facultatea de Design Industrial și Managementul Afacerilor\" />\r\n                                    <option value=\"Facultatea de Construcţii şi Instalaţii\" label=\"Facultatea de Construcţii şi Instalaţii\" />\r\n                                    <option value=\"Facultatea de Automatică și Calculatoare\" label=\"Facultatea de Automatică și Calculatoare\" />\r\n                                    <option value=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" label=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" />\r\n                                    <option value=\"Facultatea Construcţii de Maşini și Management Industrial\" label=\"Facultatea Construcţii de Maşini și Management Industrial\" />\r\n                                </select>\r\n                                {formik.errors.university && <ErrorMessageEl>{formik.errors.university}</ErrorMessageEl>}       \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"type_of_study\" className=\"form-group-label label\">Tipul de studiu.*</label>\r\n                                <select \r\n                                    id=\"type_of_study\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"type_of_study\"\r\n                                    value={formik.values.type_of_study}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={handleBlur}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati tipul de studiu\" />\r\n                                    <option value=\"Licenta\" label=\"Licenta\" />\r\n                                    <option value=\"Master\" label=\"Master\" />\r\n                                    <option value=\"Doctorat\" label=\"Doctorat\" />\r\n                                </select>\r\n                                {formik.errors.type_of_study && <ErrorMessageEl>{formik.errors.type_of_study}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"year_of_study\" className=\"form-group-label label\">Anul de studiu.*</label>\r\n                                <select \r\n                                    id=\"year_of_study\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"year_of_study\"\r\n                                    value={formik.values.year_of_study}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati anul de studiu\" />\r\n                                    { (typeOfStudy === 'Licenta' || typeOfStudy === '')&& (\r\n                                        <>\r\n                                            <option value=\"1\" label=\"1\" />\r\n                                            <option value=\"2\" label=\"2\" />\r\n                                            <option value=\"3\" label=\"3\" />\r\n                                            <option value=\"4\" label=\"4\" />\r\n                                            <option value=\"5\" label=\"5\" />\r\n                                            <option value=\"6\" label=\"6\" />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    { (typeOfStudy === 'Master' || typeOfStudy === 'Doctorat') && (\r\n                                        <>\r\n                                            <option value=\"1\" label=\"1\" />\r\n                                            <option value=\"2\" label=\"2\" />\r\n                                        </>\r\n                                    )}\r\n                                </select>\r\n                                {formik.errors.year_of_study && <ErrorMessageEl>{formik.errors.year_of_study}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"grade\" className=\"form-group-label label\">Media generala a anului trecut.*</label>\r\n                                <input \r\n                                    type=\"number\" \r\n                                    min=\"0\"\r\n                                    max=\"10\"\r\n                                    step=\"0.01\"\r\n                                    id=\"grade\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"grade\"\r\n                                    value={formik.values.grade}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.grade && <ErrorMessageEl>{formik.errors.grade}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"financial_type\" className=\"form-group-label label\">Tipul de studiu: buget / taxa.*</label>\r\n                                <select \r\n                                    id=\"financial_type\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"financial_type\"\r\n                                    value={formik.values.financial_type}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati tipul de studiu: buget / taxa\" />\r\n                                    <option value=\"Buget\" label=\"Buget\" />\r\n                                    <option value=\"Taxa\" label=\"Taxa\" />\r\n                                </select>\r\n                                {formik.errors.financial_type && <ErrorMessageEl>{formik.errors.financial_type}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"student_gender\" className=\"form-group-label label\">Genul dvs.*</label>\r\n                                <select \r\n                                    id=\"student_gender\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"student_gender\"\r\n                                    value={formik.values.student_gender}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul dvs.\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                </select>\r\n                                {formik.errors.student_gender && <ErrorMessageEl>{formik.errors.student_gender}</ErrorMessageEl>}\r\n                            </div>          \r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Inroleaza-te\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardCreateEnroll;\r\n\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StudentDashboardNav from '../StudentDashboardNav/StudentDashboardNav';\r\nimport ErrorMessageEl from '../../SharedComponents/FormErrorMessage/ErrorMessage';\r\nimport GeneralErrorMessage from '../../SharedComponents/GeneralErrorMessage/GeneralErrorMessage';\r\nimport ButtonPrimary from '../../SharedComponents/Button/ButtonPrimary';\r\nimport axios from 'axios';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { enrollSchema } from '../../../validation/UserSchema';\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n    requestUpdateEnroll,\r\n    receiveUpdateEnroll,\r\n    updateEnrollError,\r\n    requestDeleteEnroll,\r\n    receiveDeleteEnroll,\r\n    deleteEnrollError \r\n} from '../../../redux/userEnrollSlice';\r\nimport { userSelector } from '../../../redux/userSlice';\r\n\r\nimport './StudentDashboardUpdateEnroll.scss';\r\n\r\nfunction StudentDashboardUpdateEnroll({ sectionData }) {\r\n\r\n    // REDUX\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(userSelector);\r\n    const history = useHistory();\r\n    // STATE\r\n    const [ formError, setFormError ] = useState('');\r\n    const [ typeOfStudy, setTypeOfStudy ] = useState('');\r\n    // REF\r\n    const blockRef = useRef(null)\r\n\r\n    // RESET SCROLL POS\r\n    const executeScroll = () => window.scrollTo(0, blockRef.current.offsetTop);  \r\n\r\n    // HANDLE FIELD ON BLUR\r\n    const handleBlur = (e) => setTypeOfStudy(e.target.value);\r\n\r\n    // UPDATE ENROLLMENT\r\n    const onSubmit = (values, { resetForm }) => {\r\n        // RESET SCROLL POSITION\r\n        executeScroll();\r\n\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestUpdateEnroll());\r\n\r\n        //`/api/v1/users/enrollment/${sectionData.uuid}`\r\n\r\n        axios.patch(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/enrollment/${sectionData.uuid}`,  values, reqConfig).then((response) => {\r\n            if(response.status === 200 || response.status === 201) {\r\n                const { enrollment } = response.data;\r\n                dispatch(receiveUpdateEnroll(enrollment));\r\n                resetForm();\r\n                setFormError('');\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/enrollment/success`);\r\n            } else {\r\n                dispatch(updateEnrollError('There is an error with creating your information, please try again'));\r\n                setFormError('There is an error with creating your information, please try again');\r\n            }\r\n        }).catch(err => {\r\n            const message = err.response.data.errors ? err.response.data.errors[0].msg : err.response.data.message;\r\n            setFormError(message);\r\n            dispatch(updateEnrollError(message));\r\n        });\r\n    };\r\n\r\n    // DELETE ENROLLMENT\r\n    const handleDeleteEnrollment = () => {\r\n        const reqConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            }, \r\n        }\r\n\r\n        dispatch(requestDeleteEnroll());\r\n\r\n        ///api/v1/users/enrollment/${sectionData.uuid}\r\n\r\n        axios.delete(`https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/enrollment/${sectionData.uuid}`, reqConfig).then((response) => {\r\n            if(response.status === 204) {\r\n                dispatch(receiveDeleteEnroll());\r\n                history.push(`/${userState.user.first_name}.${userState.user.last_name}/kins`);\r\n            } else {\r\n                dispatch(deleteEnrollError('There is an error, your enrollment can not be deleted. Please try again'));\r\n                setFormError('There is an error, your enrollment can not be deleted. Please try again');\r\n            }\r\n        }).catch(err => {\r\n            setFormError('There is an error, please try again');\r\n        });\r\n    }\r\n\r\n    // FORM HANDLER\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            university: sectionData.university,\r\n            year_of_study: sectionData.year_of_study,\r\n            type_of_study: sectionData.type_of_study,\r\n            grade: sectionData.grade,\r\n            financial_type: sectionData.financial_type,\r\n            nationality: sectionData.nationality,\r\n            student_gender: sectionData.student_gender,\r\n        },\r\n        validateOnBlur: true,\r\n        onSubmit,\r\n        validationSchema: enrollSchema\r\n    });\r\n\r\n    return (\r\n        <section className=\"dashboard-update-enroll\">\r\n            <div className=\"dashboard-update-enroll-inner\">\r\n                <StudentDashboardNav />\r\n                <div className=\"dashboard-form-block\" ref={blockRef}>\r\n                    <div className=\"dashboard-form-block-heading-wrapper\">\r\n                        <h3 className=\"dashboard-form-title heading-three\">Adauga informatiile personale</h3>    \r\n                        {formError ? <GeneralErrorMessage>{formError}</GeneralErrorMessage> : null }    \r\n                    </div>\r\n                    <form className=\"dashboard-update-enroll-form\" method=\"POST\" onSubmit={ formik.handleSubmit }>\r\n                        <div className=\"form-block full-width\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"university\" className=\"form-group-label label\">Universitatea dvs.*</label>\r\n                                <select \r\n                                    id=\"university\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"university\"\r\n                                    value={formik.values.university}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati universitatea\" />\r\n                                    <option value=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" label=\"Facultatea de Ştiinţa şi Ingineria Materialelor\" />\r\n                                    <option value=\"Facultatea de Mecanică Iaşi\" label=\"Facultatea de Mecanică Iaşi\" />\r\n                                    <option value=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" label=\"Facultatea de Inginerie Electrică, Energetică şi Informatică Aplicată\" />\r\n                                    <option value=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" label=\"Facultatea de Inginerie Chimică și Protecția Mediului „Cristofor Simionescu”\" />\r\n                                    <option value=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" label=\"Facultatea de Hidrotehnică, Geodezie şi Ingineria Mediului\" />\r\n                                    <option value=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" label=\"Facultatea de Electronică, Telecomunicaţii şi Tehnologia Informaţiei\" />\r\n                                    <option value=\"Facultatea de Design Industrial și Managementul Afacerilor\" label=\"Facultatea de Design Industrial și Managementul Afacerilor\" />\r\n                                    <option value=\"Facultatea de Construcţii şi Instalaţii\" label=\"Facultatea de Construcţii şi Instalaţii\" />\r\n                                    <option value=\"Facultatea de Automatică și Calculatoare\" label=\"Facultatea de Automatică și Calculatoare\" />\r\n                                    <option value=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" label=\"Facultatea de Arhitectură „G.M. Cantacuzino”\" />\r\n                                    <option value=\"Facultatea Construcţii de Maşini și Management Industrial\" label=\"Facultatea Construcţii de Maşini și Management Industrial\" />\r\n                                </select>\r\n                                {formik.errors.university && <ErrorMessageEl>{formik.errors.university}</ErrorMessageEl>}       \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"type_of_study\" className=\"form-group-label label\">Tipul de studiu.*</label>\r\n                                <select \r\n                                    id=\"type_of_study\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"type_of_study\"\r\n                                    value={formik.values.type_of_study}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={handleBlur}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati tipul de studiu\" />\r\n                                    <option value=\"Licenta\" label=\"Licenta\" />\r\n                                    <option value=\"Master\" label=\"Master\" />\r\n                                    <option value=\"Doctorat\" label=\"Doctorat\" />\r\n                                </select>\r\n                                {formik.errors.type_of_study && <ErrorMessageEl>{formik.errors.type_of_study}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"year_of_study\" className=\"form-group-label label\">Anul de studiu.*</label>\r\n                                <select \r\n                                    id=\"year_of_study\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"year_of_study\"\r\n                                    value={formik.values.year_of_study}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati anul de studiu\" />\r\n                                    { (typeOfStudy === 'Licenta' || typeOfStudy === '')&& (\r\n                                        <>\r\n                                            <option value=\"1\" label=\"1\" />\r\n                                            <option value=\"2\" label=\"2\" />\r\n                                            <option value=\"3\" label=\"3\" />\r\n                                            <option value=\"4\" label=\"4\" />\r\n                                            <option value=\"5\" label=\"5\" />\r\n                                            <option value=\"6\" label=\"6\" />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    { (typeOfStudy === 'Master' || typeOfStudy === 'Doctorat') && (\r\n                                        <>\r\n                                            <option value=\"1\" label=\"1\" />\r\n                                            <option value=\"2\" label=\"2\" />\r\n                                        </>\r\n                                    )}\r\n                                </select>\r\n                                {formik.errors.year_of_study && <ErrorMessageEl>{formik.errors.year_of_study}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"grade\" className=\"form-group-label label\">Media generala a anului trecut.*</label>\r\n                                <input \r\n                                    type=\"number\" \r\n                                    min=\"0\"\r\n                                    max=\"10\"\r\n                                    step=\"0.01\"\r\n                                    id=\"grade\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"grade\"\r\n                                    value={formik.values.grade}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.grade && <ErrorMessageEl>{formik.errors.grade}</ErrorMessageEl>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"financial_type\" className=\"form-group-label label\">Tipul de studiu: buget / taxa.*</label>\r\n                                <select \r\n                                    id=\"financial_type\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"financial_type\"\r\n                                    value={formik.values.financial_type}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati tipul de studiu: buget / taxa\" />\r\n                                    <option value=\"Buget\" label=\"Buget\" />\r\n                                    <option value=\"Taxa\" label=\"Taxa\" />\r\n                                </select>\r\n                                {formik.errors.financial_type && <ErrorMessageEl>{formik.errors.financial_type}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nationality\" className=\"form-group-label label\">Nationalitatea*</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nationality\" \r\n                                    className=\"form-group-input\"\r\n                                    name=\"nationality\"\r\n                                    value={formik.values.nationality}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                {formik.errors.nationality && <ErrorMessageEl>{formik.errors.nationality}</ErrorMessageEl>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"student_gender\" className=\"form-group-label label\">Genul dvs.*</label>\r\n                                <select \r\n                                    id=\"student_gender\" \r\n                                    className=\"form-group-input form-group-select\"\r\n                                    name=\"student_gender\"\r\n                                    value={formik.values.student_gender}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <option value=\"\" label=\"Selectati genul dvs.\" />\r\n                                    <option value=\"Feminin\" label=\"Feminin\" />\r\n                                    <option value=\"Masculin\" label=\"Masculin\" />\r\n                                </select>\r\n                                {formik.errors.student_gender && <ErrorMessageEl>{formik.errors.student_gender}</ErrorMessageEl>}\r\n                            </div>          \r\n                        </div>\r\n                        <ButtonPrimary type=\"submit\" textLabel=\"Actualizeaza inrolarea\" />\r\n                        <ButtonPrimary type=\"button\" onClick={handleDeleteEnrollment} textLabel=\"Sterge inrolarea\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardUpdateEnroll;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport InitialTransition from '../utils/InitialTransition/InitialTransition';\r\n\r\n// COMPONENTS\r\nimport Header from '../components/LayoutComponents/Header/Header';\r\nimport AuthBanner from '../components/SharedComponents/AuthBanner/AuthBanner';\r\nimport StudentDashboardCreateEnroll from '../components/StudentDashboard/StudentDashboardCreateEnroll/StudentDashboardCreateEnroll';\r\nimport StudentDashboardUpdateEnroll from '../components/StudentDashboard/StudentDashboardUpdateEnroll/StudentDashboardUpdateEnroll';\r\nimport StatsSection from '../components/SharedComponents/StatsSection/StatsSection';\r\nimport Footer from '../components/LayoutComponents/Footer/Footer';\r\n// REDUX\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestEnroll, receiveEnroll, enrollError, userEnrollSelector } from '../redux/userEnrollSlice';\r\n\r\n// DATA\r\nconst bannerData = {\r\n    isLink: null,\r\n    subtitle: \"Inrolarea studentilor\"\r\n}\r\n\r\nfunction StudentDashboardEnrollment() {\r\n\r\n    // SLICE OF STATE\r\n    const userEnrollSlice = useSelector(userEnrollSelector);\r\n    const dispatch = useDispatch();\r\n    // STATE\r\n    const [ currentEnroll, setCurrentEnroll ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    // GET CURRENT ENROLLMENT ON FIRST RENDER\r\n    useEffect(() => {\r\n        const fetchCurrentEnroll = () => {\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    withCredentials: true,\r\n                    credentials: 'include'\r\n                }, \r\n            }\r\n            \r\n            dispatch(requestEnroll());\r\n\r\n            ///api/v1/users/enrollment\r\n\r\n            axios.get('https://campus-tudor-vladimirescu.herokuapp.com/api/v1/users/enrollment', reqConfig).then((response) => {\r\n                const { enrollment } = response.data;\r\n                dispatch(receiveEnroll(enrollment));\r\n                setCurrentEnroll(enrollment);\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                dispatch(enrollError('There is an error with your informations'));\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n\r\n        fetchCurrentEnroll();\r\n    }, [dispatch]);\r\n\r\n    if(isLoading) {\r\n        return <InitialTransition />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InitialTransition />\r\n            <Header />\r\n            <main className=\"page-content\">\r\n                <AuthBanner sectionData={ bannerData }/>    \r\n                {\r\n                    userEnrollSlice.isEnrolled ? <StudentDashboardUpdateEnroll sectionData={currentEnroll} /> : <StudentDashboardCreateEnroll />\r\n                }\r\n                <StatsSection />\r\n            </main>\r\n            <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentDashboardEnrollment;\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport './ButtonPrimary.scss';\r\n\r\nfunction Button({ type, disabled, onClick, textLabel }) {\r\n    return (\r\n        <button type={type} disabled={disabled} onClick={onClick} className=\"button-primary\">\r\n            <span className=\"button-primary-label label\">{textLabel}</span>\r\n            <IconContext.Provider value={{color: '#fafafa', size: '30px'}}>\r\n                <BsArrowRight />\r\n            </IconContext.Provider>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorMessageWrapper = styled.div`\r\n    width: 100%;\r\n    padding: 2.5rem 0;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    text-align: start;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nconst MessageLabel = styled.p`\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n    letter-spacing: 0.1rem;\r\n    color: #a50000;\r\n    transition: var(--hover-transition);\r\n`;\r\n\r\nfunction ErrorMessageEl ({ children }) {\r\n    return (\r\n        <ErrorMessageWrapper>\r\n            <MessageLabel>{children}</MessageLabel>\r\n        </ErrorMessageWrapper>\r\n    )\r\n}\r\n\r\nexport default ErrorMessageEl;\r\n"],"sourceRoot":""}